# Функция очистки консоли
def clear(message: str = None):
    import platform, os
    if platform.system() == "Windows":
        os.system("cls")
    if platform.system() == 'Linux':
        os.system("clear")
    if message:
        print(message)
    if platform.system() not in ['Windows', 'Linux']:
        print('Программу невозможно запустить на вашей ОС!')
        quit()

# Импорт модулей
try:
    from pyrogram import Client, filters, enums
    from pyrogram.errors import FloodWait
    from pyrogram.types import Message
    from g4f.client import Client as ClientGPT
    from databaze.databaze import DataBaze, DataFile
    import time, os, datetime, re, json, asyncio, pyrogram, subprocess, sys, requests, io, platform, g4f, httpx
    from googletrans import Translator
except:
    import os
    clear('Вам необходимо установить модули')
    os.system('pause')
    os.system('pip install -r requirements.txt')
    clear('Вы успешно установили модули, перезапустите бота!')
    quit()

# Банер
app_title = """\n\n\n\n\n\n\n                                                                                                                         
                \033[38;2;57;98;247mN\033[0m\033[38;2;57;98;246mN\033[0m\033[38;2;56;99;245mN\033[0m\033[38;2;56;99;244mN\033[0m\033[38;2;56;99;244mN\033[0m\033[38;2;55;100;243mN\033[0m\033[38;2;55;100;242mN\033[0m\033[38;2;54;100;241mN\033[0m\033[38;2;54;100;240m \033[0m\033[38;2;54;101;239m \033[0m\033[38;2;53;101;239m \033[0m\033[38;2;53;101;238m \033[0m\033[38;2;53;102;237m \033[0m\033[38;2;52;102;236m \033[0m\033[38;2;52;102;235m \033[0m\033[38;2;52;103;234m \033[0m\033[38;2;51;103;234mN\033[0m\033[38;2;51;103;233mN\033[0m\033[38;2;50;104;232mN\033[0m\033[38;2;50;104;231mN\033[0m\033[38;2;50;104;230mN\033[0m\033[38;2;49;104;229mN\033[0m\033[38;2;49;105;229mN\033[0m\033[38;2;49;105;228mN\033[0m\033[38;2;48;105;227m \033[0m\033[38;2;48;106;226m \033[0m\033[38;2;48;106;225m \033[0m\033[38;2;47;106;224m \033[0m\033[38;2;47;107;224m \033[0m\033[38;2;47;107;223m \033[0m\033[38;2;46;107;222m \033[0m\033[38;2;46;108;221m \033[0m\033[38;2;45;108;220m \033[0m\033[38;2;45;108;219m \033[0m\033[38;2;45;108;218m \033[0m\033[38;2;44;109;218m \033[0m\033[38;2;44;109;217m \033[0m\033[38;2;44;109;216m \033[0m\033[38;2;43;110;215m \033[0m\033[38;2;43;110;214m \033[0m\033[38;2;43;110;213m \033[0m\033[38;2;42;111;213m \033[0m\033[38;2;42;111;212mN\033[0m\033[38;2;41;111;211mN\033[0m\033[38;2;41;112;210mN\033[0m\033[38;2;41;112;209mN\033[0m\033[38;2;40;112;208mN\033[0m\033[38;2;40;112;208mN\033[0m\033[38;2;40;113;207mN\033[0m\033[38;2;39;113;206mN\033[0m\033[38;2;39;113;205m \033[0m\033[38;2;39;114;204m \033[0m\033[38;2;38;114;203m \033[0m\033[38;2;38;114;203m \033[0m\033[38;2;37;115;202m \033[0m\033[38;2;37;115;201m \033[0m\033[38;2;37;115;200m \033[0m\033[38;2;36;116;199m \033[0m\033[38;2;36;116;198mN\033[0m\033[38;2;36;116;198mN\033[0m\033[38;2;35;116;197mN\033[0m\033[38;2;35;117;196mN\033[0m\033[38;2;35;117;195mN\033[0m\033[38;2;34;117;194mN\033[0m\033[38;2;34;118;193mN\033[0m\033[38;2;34;118;193mN\033[0m\033[38;2;33;118;192m \033[0m\033[38;2;33;119;191m \033[0m\033[38;2;32;119;190m \033[0m\033[38;2;32;119;189m \033[0m\033[38;2;32;120;188m \033[0m\033[38;2;31;120;187mB\033[0m\033[38;2;31;120;187mB\033[0m\033[38;2;31;120;186mB\033[0m\033[38;2;30;121;185mB\033[0m\033[38;2;30;121;184mB\033[0m\033[38;2;30;121;183mB\033[0m\033[38;2;29;122;182mB\033[0m\033[38;2;29;122;182mB\033[0m\033[38;2;28;122;181mB\033[0m\033[38;2;28;123;180mB\033[0m\033[38;2;28;123;179mB\033[0m\033[38;2;27;123;178mB\033[0m\033[38;2;27;124;177mB\033[0m\033[38;2;27;124;177mB\033[0m\033[38;2;26;124;176mB\033[0m\033[38;2;26;124;175mB\033[0m\033[38;2;26;125;174mB\033[0m\033[38;2;25;125;173m \033[0m\033[38;2;25;125;172m \033[0m\033[38;2;24;126;172m \033[0m\033[38;2;24;126;171m \033[0m\033[38;2;24;126;170m \033[0m\033[38;2;23;127;169m \033[0m\033[38;2;23;127;168m \033[0m\033[38;2;23;127;167m \033[0m\033[38;2;22;128;167m \033[0m\033[38;2;22;128;166m \033[0m\033[38;2;22;128;165m \033[0m\033[38;2;21;128;164m \033[0m\033[38;2;21;129;163m \033[0m\033[38;2;20;129;162m \033[0m\033[38;2;20;129;161m \033[0m\033[38;2;20;130;161m \033[0m\033[38;2;19;130;160m \033[0m\033[38;2;19;130;159m \033[0m\033[38;2;19;131;158m \033[0m\033[38;2;18;131;157m \033[0m\033[38;2;18;131;156m \033[0m\033[38;2;18;132;156m \033[0m\033[38;2;17;132;155m \033[0m\033[38;2;17;132;154m \033[0m\033[38;2;17;132;153m \033[0m\033[38;2;16;133;152m \033[0m\033[38;2;16;133;151m \033[0m\033[38;2;15;133;151m \033[0m\033[38;2;15;134;150m \033[0m\033[38;2;15;134;149mt\033[0m\033[38;2;14;134;148mt\033[0m\033[38;2;14;135;147mt\033[0m\033[38;2;14;135;146mt\033[0m\033[38;2;13;135;146m \033[0m\033[38;2;13;136;145m \033[0m\033[38;2;13;136;144m \033[0m\033[38;2;12;136;143m \033[0m\033[38;2;12;136;142m \033[0m\033[38;2;11;137;141m \033[0m\033[38;2;11;137;141m \033[0m\033[38;2;11;137;140m \033[0m\033[38;2;10;138;139m \033[0m\033[38;2;10;138;138m \033[0m
                \033[38;2;57;98;247mN\033[0m\033[38;2;57;98;246m:\033[0m\033[38;2;56;99;245m:\033[0m\033[38;2;56;99;244m:\033[0m\033[38;2;56;99;244m:\033[0m\033[38;2;55;100;243m:\033[0m\033[38;2;55;100;242m:\033[0m\033[38;2;54;100;241m:\033[0m\033[38;2;54;100;240mN\033[0m\033[38;2;54;101;239m \033[0m\033[38;2;53;101;239m \033[0m\033[38;2;53;101;238m \033[0m\033[38;2;53;102;237m \033[0m\033[38;2;52;102;236m \033[0m\033[38;2;52;102;235m \033[0m\033[38;2;52;103;234m \033[0m\033[38;2;51;103;234mN\033[0m\033[38;2;51;103;233m:\033[0m\033[38;2;50;104;232m:\033[0m\033[38;2;50;104;231m:\033[0m\033[38;2;50;104;230m:\033[0m\033[38;2;49;104;229m:\033[0m\033[38;2;49;105;229m:\033[0m\033[38;2;49;105;228mN\033[0m\033[38;2;48;105;227m \033[0m\033[38;2;48;106;226m \033[0m\033[38;2;48;106;225m \033[0m\033[38;2;47;106;224m \033[0m\033[38;2;47;107;224m \033[0m\033[38;2;47;107;223m \033[0m\033[38;2;46;107;222m \033[0m\033[38;2;46;108;221m \033[0m\033[38;2;45;108;220m \033[0m\033[38;2;45;108;219m \033[0m\033[38;2;45;108;218m \033[0m\033[38;2;44;109;218m \033[0m\033[38;2;44;109;217m \033[0m\033[38;2;44;109;216m \033[0m\033[38;2;43;110;215m \033[0m\033[38;2;43;110;214m \033[0m\033[38;2;43;110;213m \033[0m\033[38;2;42;111;213m \033[0m\033[38;2;42;111;212mN\033[0m\033[38;2;41;111;211m:\033[0m\033[38;2;41;112;210m:\033[0m\033[38;2;41;112;209m:\033[0m\033[38;2;40;112;208m:\033[0m\033[38;2;40;112;208m:\033[0m\033[38;2;40;113;207m:\033[0m\033[38;2;39;113;206m:\033[0m\033[38;2;39;113;205mN\033[0m\033[38;2;39;114;204m \033[0m\033[38;2;38;114;203m \033[0m\033[38;2;38;114;203m \033[0m\033[38;2;37;115;202m \033[0m\033[38;2;37;115;201m \033[0m\033[38;2;37;115;200m \033[0m\033[38;2;36;116;199m \033[0m\033[38;2;36;116;198mN\033[0m\033[38;2;36;116;198m:\033[0m\033[38;2;35;116;197m:\033[0m\033[38;2;35;117;196m:\033[0m\033[38;2;35;117;195m:\033[0m\033[38;2;34;117;194m:\033[0m\033[38;2;34;118;193m:\033[0m\033[38;2;34;118;193mN\033[0m\033[38;2;33;118;192m \033[0m\033[38;2;33;119;191m \033[0m\033[38;2;32;119;190m \033[0m\033[38;2;32;119;189m \033[0m\033[38;2;32;120;188m \033[0m\033[38;2;31;120;187mB\033[0m\033[38;2;31;120;187m:\033[0m\033[38;2;31;120;186m:\033[0m\033[38;2;30;121;185m:\033[0m\033[38;2;30;121;184m:\033[0m\033[38;2;30;121;183m:\033[0m\033[38;2;29;122;182m:\033[0m\033[38;2;29;122;182m:\033[0m\033[38;2;28;122;181m:\033[0m\033[38;2;28;123;180m:\033[0m\033[38;2;28;123;179m:\033[0m\033[38;2;27;123;178m:\033[0m\033[38;2;27;124;177m:\033[0m\033[38;2;27;124;177m:\033[0m\033[38;2;26;124;176m:\033[0m\033[38;2;26;124;175m:\033[0m\033[38;2;26;125;174m:\033[0m\033[38;2;25;125;173mB\033[0m\033[38;2;25;125;172m \033[0m\033[38;2;24;126;172m \033[0m\033[38;2;24;126;171m \033[0m\033[38;2;24;126;170m \033[0m\033[38;2;23;127;169m \033[0m\033[38;2;23;127;168m \033[0m\033[38;2;23;127;167m \033[0m\033[38;2;22;128;167m \033[0m\033[38;2;22;128;166m \033[0m\033[38;2;22;128;165m \033[0m\033[38;2;21;128;164m \033[0m\033[38;2;21;129;163m \033[0m\033[38;2;20;129;162m \033[0m\033[38;2;20;129;161m \033[0m\033[38;2;20;130;161m \033[0m\033[38;2;19;130;160m \033[0m\033[38;2;19;130;159m \033[0m\033[38;2;19;131;158m \033[0m\033[38;2;18;131;157m \033[0m\033[38;2;18;131;156m \033[0m\033[38;2;18;132;156m \033[0m\033[38;2;17;132;155m \033[0m\033[38;2;17;132;154m \033[0m\033[38;2;17;132;153m \033[0m\033[38;2;16;133;152m \033[0m\033[38;2;16;133;151mt\033[0m\033[38;2;15;133;151mt\033[0m\033[38;2;15;134;150mt\033[0m\033[38;2;15;134;149m:\033[0m\033[38;2;14;134;148m:\033[0m\033[38;2;14;135;147m:\033[0m\033[38;2;14;135;146mt\033[0m\033[38;2;13;135;146m \033[0m\033[38;2;13;136;145m \033[0m\033[38;2;13;136;144m \033[0m\033[38;2;12;136;143m \033[0m\033[38;2;12;136;142m \033[0m\033[38;2;11;137;141m \033[0m\033[38;2;11;137;141m \033[0m\033[38;2;11;137;140m \033[0m\033[38;2;10;138;139m \033[0m\033[38;2;10;138;138m \033[0m
                \033[38;2;57;98;247mN\033[0m\033[38;2;57;98;246m:\033[0m\033[38;2;56;99;245m:\033[0m\033[38;2;56;99;244m:\033[0m\033[38;2;56;99;244m:\033[0m\033[38;2;55;100;243m:\033[0m\033[38;2;55;100;242m:\033[0m\033[38;2;54;100;241m:\033[0m\033[38;2;54;100;240m:\033[0m\033[38;2;54;101;239mN\033[0m\033[38;2;53;101;239m \033[0m\033[38;2;53;101;238m \033[0m\033[38;2;53;102;237m \033[0m\033[38;2;52;102;236m \033[0m\033[38;2;52;102;235m \033[0m\033[38;2;52;103;234m \033[0m\033[38;2;51;103;234mN\033[0m\033[38;2;51;103;233m:\033[0m\033[38;2;50;104;232m:\033[0m\033[38;2;50;104;231m:\033[0m\033[38;2;50;104;230m:\033[0m\033[38;2;49;104;229m:\033[0m\033[38;2;49;105;229m:\033[0m\033[38;2;49;105;228mN\033[0m\033[38;2;48;105;227m \033[0m\033[38;2;48;106;226m \033[0m\033[38;2;48;106;225m \033[0m\033[38;2;47;106;224m \033[0m\033[38;2;47;107;224m \033[0m\033[38;2;47;107;223m \033[0m\033[38;2;46;107;222m \033[0m\033[38;2;46;108;221m \033[0m\033[38;2;45;108;220m \033[0m\033[38;2;45;108;219m \033[0m\033[38;2;45;108;218m \033[0m\033[38;2;44;109;218m \033[0m\033[38;2;44;109;217m \033[0m\033[38;2;44;109;216m \033[0m\033[38;2;43;110;215m \033[0m\033[38;2;43;110;214m \033[0m\033[38;2;43;110;213m \033[0m\033[38;2;42;111;213m \033[0m\033[38;2;42;111;212mN\033[0m\033[38;2;41;111;211m:\033[0m\033[38;2;41;112;210m:\033[0m\033[38;2;41;112;209m:\033[0m\033[38;2;40;112;208m:\033[0m\033[38;2;40;112;208m:\033[0m\033[38;2;40;113;207m:\033[0m\033[38;2;39;113;206m:\033[0m\033[38;2;39;113;205m:\033[0m\033[38;2;39;114;204mN\033[0m\033[38;2;38;114;203m \033[0m\033[38;2;38;114;203m \033[0m\033[38;2;37;115;202m \033[0m\033[38;2;37;115;201m \033[0m\033[38;2;37;115;200m \033[0m\033[38;2;36;116;199m \033[0m\033[38;2;36;116;198mN\033[0m\033[38;2;36;116;198m:\033[0m\033[38;2;35;116;197m:\033[0m\033[38;2;35;117;196m:\033[0m\033[38;2;35;117;195m:\033[0m\033[38;2;34;117;194m:\033[0m\033[38;2;34;118;193m:\033[0m\033[38;2;34;118;193mN\033[0m\033[38;2;33;118;192m \033[0m\033[38;2;33;119;191m \033[0m\033[38;2;32;119;190m \033[0m\033[38;2;32;119;189m \033[0m\033[38;2;32;120;188m \033[0m\033[38;2;31;120;187mB\033[0m\033[38;2;31;120;187m:\033[0m\033[38;2;31;120;186m:\033[0m\033[38;2;30;121;185m:\033[0m\033[38;2;30;121;184m:\033[0m\033[38;2;30;121;183m:\033[0m\033[38;2;29;122;182m:\033[0m\033[38;2;29;122;182mB\033[0m\033[38;2;28;122;181mB\033[0m\033[38;2;28;123;180mB\033[0m\033[38;2;28;123;179mB\033[0m\033[38;2;27;123;178mB\033[0m\033[38;2;27;124;177mB\033[0m\033[38;2;27;124;177m:\033[0m\033[38;2;26;124;176m:\033[0m\033[38;2;26;124;175m:\033[0m\033[38;2;26;125;174m:\033[0m\033[38;2;25;125;173m:\033[0m\033[38;2;25;125;172mB\033[0m\033[38;2;24;126;172m \033[0m\033[38;2;24;126;171m \033[0m\033[38;2;24;126;170m \033[0m\033[38;2;23;127;169m \033[0m\033[38;2;23;127;168m \033[0m\033[38;2;23;127;167m \033[0m\033[38;2;22;128;167m \033[0m\033[38;2;22;128;166m \033[0m\033[38;2;22;128;165m \033[0m\033[38;2;21;128;164m \033[0m\033[38;2;21;129;163m \033[0m\033[38;2;20;129;162m \033[0m\033[38;2;20;129;161m \033[0m\033[38;2;20;130;161m \033[0m\033[38;2;19;130;160m \033[0m\033[38;2;19;130;159m \033[0m\033[38;2;19;131;158m \033[0m\033[38;2;18;131;157m \033[0m\033[38;2;18;131;156m \033[0m\033[38;2;18;132;156m \033[0m\033[38;2;17;132;155m \033[0m\033[38;2;17;132;154m \033[0m\033[38;2;17;132;153m \033[0m\033[38;2;16;133;152m \033[0m\033[38;2;16;133;151mt\033[0m\033[38;2;15;133;151m:\033[0m\033[38;2;15;134;150m:\033[0m\033[38;2;15;134;149m:\033[0m\033[38;2;14;134;148m:\033[0m\033[38;2;14;135;147m:\033[0m\033[38;2;14;135;146mt\033[0m\033[38;2;13;135;146m \033[0m\033[38;2;13;136;145m \033[0m\033[38;2;13;136;144m \033[0m\033[38;2;12;136;143m \033[0m\033[38;2;12;136;142m \033[0m\033[38;2;11;137;141m \033[0m\033[38;2;11;137;141m \033[0m\033[38;2;11;137;140m \033[0m\033[38;2;10;138;139m \033[0m\033[38;2;10;138;138m \033[0m
                \033[38;2;57;98;247mN\033[0m\033[38;2;57;98;246m:\033[0m\033[38;2;56;99;245m:\033[0m\033[38;2;56;99;244m:\033[0m\033[38;2;56;99;244m:\033[0m\033[38;2;55;100;243m:\033[0m\033[38;2;55;100;242m:\033[0m\033[38;2;54;100;241m:\033[0m\033[38;2;54;100;240m:\033[0m\033[38;2;54;101;239m:\033[0m\033[38;2;53;101;239mN\033[0m\033[38;2;53;101;238m \033[0m\033[38;2;53;102;237m \033[0m\033[38;2;52;102;236m \033[0m\033[38;2;52;102;235m \033[0m\033[38;2;52;103;234m \033[0m\033[38;2;51;103;234mN\033[0m\033[38;2;51;103;233m:\033[0m\033[38;2;50;104;232m:\033[0m\033[38;2;50;104;231m:\033[0m\033[38;2;50;104;230m:\033[0m\033[38;2;49;104;229m:\033[0m\033[38;2;49;105;229m:\033[0m\033[38;2;49;105;228mN\033[0m\033[38;2;48;105;227m \033[0m\033[38;2;48;106;226m \033[0m\033[38;2;48;106;225m \033[0m\033[38;2;47;106;224m \033[0m\033[38;2;47;107;224m \033[0m\033[38;2;47;107;223m \033[0m\033[38;2;46;107;222m \033[0m\033[38;2;46;108;221m \033[0m\033[38;2;45;108;220m \033[0m\033[38;2;45;108;219m \033[0m\033[38;2;45;108;218m \033[0m\033[38;2;44;109;218m \033[0m\033[38;2;44;109;217m \033[0m\033[38;2;44;109;216m \033[0m\033[38;2;43;110;215m \033[0m\033[38;2;43;110;214m \033[0m\033[38;2;43;110;213m \033[0m\033[38;2;42;111;213m \033[0m\033[38;2;42;111;212mN\033[0m\033[38;2;41;111;211m:\033[0m\033[38;2;41;112;210m:\033[0m\033[38;2;41;112;209m:\033[0m\033[38;2;40;112;208m:\033[0m\033[38;2;40;112;208m:\033[0m\033[38;2;40;113;207m:\033[0m\033[38;2;39;113;206m:\033[0m\033[38;2;39;113;205m:\033[0m\033[38;2;39;114;204m:\033[0m\033[38;2;38;114;203mN\033[0m\033[38;2;38;114;203m \033[0m\033[38;2;37;115;202m \033[0m\033[38;2;37;115;201m \033[0m\033[38;2;37;115;200m \033[0m\033[38;2;36;116;199m \033[0m\033[38;2;36;116;198mN\033[0m\033[38;2;36;116;198m:\033[0m\033[38;2;35;116;197m:\033[0m\033[38;2;35;117;196m:\033[0m\033[38;2;35;117;195m:\033[0m\033[38;2;34;117;194m:\033[0m\033[38;2;34;118;193m:\033[0m\033[38;2;34;118;193mN\033[0m\033[38;2;33;118;192m \033[0m\033[38;2;33;119;191m \033[0m\033[38;2;32;119;190m \033[0m\033[38;2;32;119;189m \033[0m\033[38;2;32;120;188m \033[0m\033[38;2;31;120;187mB\033[0m\033[38;2;31;120;187mB\033[0m\033[38;2;31;120;186m:\033[0m\033[38;2;30;121;185m:\033[0m\033[38;2;30;121;184m:\033[0m\033[38;2;30;121;183m:\033[0m\033[38;2;29;122;182m:\033[0m\033[38;2;29;122;182mB\033[0m\033[38;2;28;122;181m \033[0m\033[38;2;28;123;180m \033[0m\033[38;2;28;123;179m \033[0m\033[38;2;27;123;178m \033[0m\033[38;2;27;124;177m \033[0m\033[38;2;27;124;177mB\033[0m\033[38;2;26;124;176m:\033[0m\033[38;2;26;124;175m:\033[0m\033[38;2;26;125;174m:\033[0m\033[38;2;25;125;173m:\033[0m\033[38;2;25;125;172m:\033[0m\033[38;2;24;126;172mB\033[0m\033[38;2;24;126;171m \033[0m\033[38;2;24;126;170m \033[0m\033[38;2;23;127;169m \033[0m\033[38;2;23;127;168m \033[0m\033[38;2;23;127;167m \033[0m\033[38;2;22;128;167m \033[0m\033[38;2;22;128;166m \033[0m\033[38;2;22;128;165m \033[0m\033[38;2;21;128;164m \033[0m\033[38;2;21;129;163m \033[0m\033[38;2;20;129;162m \033[0m\033[38;2;20;129;161m \033[0m\033[38;2;20;130;161m \033[0m\033[38;2;19;130;160m \033[0m\033[38;2;19;130;159m \033[0m\033[38;2;19;131;158m \033[0m\033[38;2;18;131;157m \033[0m\033[38;2;18;131;156m \033[0m\033[38;2;18;132;156m \033[0m\033[38;2;17;132;155m \033[0m\033[38;2;17;132;154m \033[0m\033[38;2;17;132;153m \033[0m\033[38;2;16;133;152m \033[0m\033[38;2;16;133;151mt\033[0m\033[38;2;15;133;151m:\033[0m\033[38;2;15;134;150m:\033[0m\033[38;2;15;134;149m:\033[0m\033[38;2;14;134;148m:\033[0m\033[38;2;14;135;147m:\033[0m\033[38;2;14;135;146mt\033[0m\033[38;2;13;135;146m \033[0m\033[38;2;13;136;145m \033[0m\033[38;2;13;136;144m \033[0m\033[38;2;12;136;143m \033[0m\033[38;2;12;136;142m \033[0m\033[38;2;11;137;141m \033[0m\033[38;2;11;137;141m \033[0m\033[38;2;11;137;140m \033[0m\033[38;2;10;138;139m \033[0m\033[38;2;10;138;138m \033[0m
                \033[38;2;57;98;247mN\033[0m\033[38;2;57;98;246m:\033[0m\033[38;2;56;99;245m:\033[0m\033[38;2;56;99;244m:\033[0m\033[38;2;56;99;244m:\033[0m\033[38;2;55;100;243m:\033[0m\033[38;2;55;100;242m:\033[0m\033[38;2;54;100;241m:\033[0m\033[38;2;54;100;240m:\033[0m\033[38;2;54;101;239m:\033[0m\033[38;2;53;101;239m:\033[0m\033[38;2;53;101;238mN\033[0m\033[38;2;53;102;237m \033[0m\033[38;2;52;102;236m \033[0m\033[38;2;52;102;235m \033[0m\033[38;2;52;103;234m \033[0m\033[38;2;51;103;234mN\033[0m\033[38;2;51;103;233m:\033[0m\033[38;2;50;104;232m:\033[0m\033[38;2;50;104;231m:\033[0m\033[38;2;50;104;230m:\033[0m\033[38;2;49;104;229m:\033[0m\033[38;2;49;105;229m:\033[0m\033[38;2;49;105;228mN\033[0m\033[38;2;48;105;227m \033[0m\033[38;2;48;106;226m \033[0m\033[38;2;48;106;225ma\033[0m\033[38;2;47;106;224ma\033[0m\033[38;2;47;107;224ma\033[0m\033[38;2;47;107;223ma\033[0m\033[38;2;46;107;222ma\033[0m\033[38;2;46;108;221ma\033[0m\033[38;2;45;108;220ma\033[0m\033[38;2;45;108;219ma\033[0m\033[38;2;45;108;218ma\033[0m\033[38;2;44;109;218ma\033[0m\033[38;2;44;109;217ma\033[0m\033[38;2;44;109;216ma\033[0m\033[38;2;43;110;215ma\033[0m\033[38;2;43;110;214m \033[0m\033[38;2;43;110;213m \033[0m\033[38;2;42;111;213m \033[0m\033[38;2;42;111;212mN\033[0m\033[38;2;41;111;211m:\033[0m\033[38;2;41;112;210m:\033[0m\033[38;2;41;112;209m:\033[0m\033[38;2;40;112;208m:\033[0m\033[38;2;40;112;208m:\033[0m\033[38;2;40;113;207m:\033[0m\033[38;2;39;113;206m:\033[0m\033[38;2;39;113;205m:\033[0m\033[38;2;39;114;204m:\033[0m\033[38;2;38;114;203m:\033[0m\033[38;2;38;114;203mN\033[0m\033[38;2;37;115;202m \033[0m\033[38;2;37;115;201m \033[0m\033[38;2;37;115;200m \033[0m\033[38;2;36;116;199m \033[0m\033[38;2;36;116;198mN\033[0m\033[38;2;36;116;198m:\033[0m\033[38;2;35;116;197m:\033[0m\033[38;2;35;117;196m:\033[0m\033[38;2;35;117;195m:\033[0m\033[38;2;34;117;194m:\033[0m\033[38;2;34;118;193m:\033[0m\033[38;2;34;118;193mN\033[0m\033[38;2;33;118;192m \033[0m\033[38;2;33;119;191m \033[0m\033[38;2;32;119;190m \033[0m\033[38;2;32;119;189m \033[0m\033[38;2;32;120;188m \033[0m\033[38;2;31;120;187m \033[0m\033[38;2;31;120;187m \033[0m\033[38;2;31;120;186mB\033[0m\033[38;2;30;121;185m:\033[0m\033[38;2;30;121;184m:\033[0m\033[38;2;30;121;183m:\033[0m\033[38;2;29;122;182m:\033[0m\033[38;2;29;122;182mB\033[0m\033[38;2;28;122;181m \033[0m\033[38;2;28;123;180m \033[0m\033[38;2;28;123;179m \033[0m\033[38;2;27;123;178m \033[0m\033[38;2;27;124;177m \033[0m\033[38;2;27;124;177mB\033[0m\033[38;2;26;124;176m:\033[0m\033[38;2;26;124;175m:\033[0m\033[38;2;26;125;174m:\033[0m\033[38;2;25;125;173m:\033[0m\033[38;2;25;125;172m:\033[0m\033[38;2;24;126;172mB\033[0m\033[38;2;24;126;171m \033[0m\033[38;2;24;126;170m \033[0m\033[38;2;23;127;169m \033[0m\033[38;2;23;127;168mo\033[0m\033[38;2;23;127;167mo\033[0m\033[38;2;22;128;167mo\033[0m\033[38;2;22;128;166mo\033[0m\033[38;2;22;128;165mo\033[0m\033[38;2;21;128;164mo\033[0m\033[38;2;21;129;163mo\033[0m\033[38;2;20;129;162mo\033[0m\033[38;2;20;129;161mo\033[0m\033[38;2;20;130;161mo\033[0m\033[38;2;19;130;160mo\033[0m\033[38;2;19;130;159m \033[0m\033[38;2;19;131;158m \033[0m\033[38;2;18;131;157m \033[0m\033[38;2;18;131;156mt\033[0m\033[38;2;18;132;156mt\033[0m\033[38;2;17;132;155mt\033[0m\033[38;2;17;132;154mt\033[0m\033[38;2;17;132;153mt\033[0m\033[38;2;16;133;152mt\033[0m\033[38;2;16;133;151mt\033[0m\033[38;2;15;133;151m:\033[0m\033[38;2;15;134;150m:\033[0m\033[38;2;15;134;149m:\033[0m\033[38;2;14;134;148m:\033[0m\033[38;2;14;135;147m:\033[0m\033[38;2;14;135;146mt\033[0m\033[38;2;13;135;146mt\033[0m\033[38;2;13;136;145mt\033[0m\033[38;2;13;136;144mt\033[0m\033[38;2;12;136;143mt\033[0m\033[38;2;12;136;142mt\033[0m\033[38;2;11;137;141mt\033[0m\033[38;2;11;137;141m \033[0m\033[38;2;11;137;140m \033[0m\033[38;2;10;138;139m \033[0m\033[38;2;10;138;138m \033[0m
                \033[38;2;57;98;247mN\033[0m\033[38;2;57;98;246m:\033[0m\033[38;2;56;99;245m:\033[0m\033[38;2;56;99;244m:\033[0m\033[38;2;56;99;244m:\033[0m\033[38;2;55;100;243m:\033[0m\033[38;2;55;100;242m:\033[0m\033[38;2;54;100;241m:\033[0m\033[38;2;54;100;240m:\033[0m\033[38;2;54;101;239m:\033[0m\033[38;2;53;101;239m:\033[0m\033[38;2;53;101;238m:\033[0m\033[38;2;53;102;237mN\033[0m\033[38;2;52;102;236m \033[0m\033[38;2;52;102;235m \033[0m\033[38;2;52;103;234m \033[0m\033[38;2;51;103;234mN\033[0m\033[38;2;51;103;233m:\033[0m\033[38;2;50;104;232m:\033[0m\033[38;2;50;104;231m:\033[0m\033[38;2;50;104;230m:\033[0m\033[38;2;49;104;229m:\033[0m\033[38;2;49;105;229m:\033[0m\033[38;2;49;105;228mN\033[0m\033[38;2;48;105;227m \033[0m\033[38;2;48;106;226m \033[0m\033[38;2;48;106;225ma\033[0m\033[38;2;47;106;224m:\033[0m\033[38;2;47;107;224m:\033[0m\033[38;2;47;107;223m:\033[0m\033[38;2;46;107;222m:\033[0m\033[38;2;46;108;221m:\033[0m\033[38;2;45;108;220m:\033[0m\033[38;2;45;108;219m:\033[0m\033[38;2;45;108;218m:\033[0m\033[38;2;44;109;218m:\033[0m\033[38;2;44;109;217m:\033[0m\033[38;2;44;109;216m:\033[0m\033[38;2;43;110;215m:\033[0m\033[38;2;43;110;214ma\033[0m\033[38;2;43;110;213m \033[0m\033[38;2;42;111;213m \033[0m\033[38;2;42;111;212mN\033[0m\033[38;2;41;111;211m:\033[0m\033[38;2;41;112;210m:\033[0m\033[38;2;41;112;209m:\033[0m\033[38;2;40;112;208m:\033[0m\033[38;2;40;112;208m:\033[0m\033[38;2;40;113;207m:\033[0m\033[38;2;39;113;206m:\033[0m\033[38;2;39;113;205m:\033[0m\033[38;2;39;114;204m:\033[0m\033[38;2;38;114;203m:\033[0m\033[38;2;38;114;203m:\033[0m\033[38;2;37;115;202mN\033[0m\033[38;2;37;115;201m \033[0m\033[38;2;37;115;200m \033[0m\033[38;2;36;116;199m \033[0m\033[38;2;36;116;198mN\033[0m\033[38;2;36;116;198m:\033[0m\033[38;2;35;116;197m:\033[0m\033[38;2;35;117;196m:\033[0m\033[38;2;35;117;195m:\033[0m\033[38;2;34;117;194m:\033[0m\033[38;2;34;118;193m:\033[0m\033[38;2;34;118;193mN\033[0m\033[38;2;33;118;192m \033[0m\033[38;2;33;119;191m \033[0m\033[38;2;32;119;190m \033[0m\033[38;2;32;119;189m \033[0m\033[38;2;32;120;188m \033[0m\033[38;2;31;120;187m \033[0m\033[38;2;31;120;187m \033[0m\033[38;2;31;120;186mB\033[0m\033[38;2;30;121;185m:\033[0m\033[38;2;30;121;184m:\033[0m\033[38;2;30;121;183m:\033[0m\033[38;2;29;122;182m:\033[0m\033[38;2;29;122;182mB\033[0m\033[38;2;28;122;181m \033[0m\033[38;2;28;123;180m \033[0m\033[38;2;28;123;179m \033[0m\033[38;2;27;123;178m \033[0m\033[38;2;27;124;177m \033[0m\033[38;2;27;124;177mB\033[0m\033[38;2;26;124;176m:\033[0m\033[38;2;26;124;175m:\033[0m\033[38;2;26;125;174m:\033[0m\033[38;2;25;125;173m:\033[0m\033[38;2;25;125;172m:\033[0m\033[38;2;24;126;172mB\033[0m\033[38;2;24;126;171m \033[0m\033[38;2;24;126;170mo\033[0m\033[38;2;23;127;169mo\033[0m\033[38;2;23;127;168m:\033[0m\033[38;2;23;127;167m:\033[0m\033[38;2;22;128;167m:\033[0m\033[38;2;22;128;166m:\033[0m\033[38;2;22;128;165m:\033[0m\033[38;2;21;128;164m:\033[0m\033[38;2;21;129;163m:\033[0m\033[38;2;20;129;162m:\033[0m\033[38;2;20;129;161m:\033[0m\033[38;2;20;130;161m:\033[0m\033[38;2;19;130;160m:\033[0m\033[38;2;19;130;159mo\033[0m\033[38;2;19;131;158mo\033[0m\033[38;2;18;131;157m \033[0m\033[38;2;18;131;156mt\033[0m\033[38;2;18;132;156m:\033[0m\033[38;2;17;132;155m:\033[0m\033[38;2;17;132;154m:\033[0m\033[38;2;17;132;153m:\033[0m\033[38;2;16;133;152m:\033[0m\033[38;2;16;133;151m:\033[0m\033[38;2;15;133;151m:\033[0m\033[38;2;15;134;150m:\033[0m\033[38;2;15;134;149m:\033[0m\033[38;2;14;134;148m:\033[0m\033[38;2;14;135;147m:\033[0m\033[38;2;14;135;146m:\033[0m\033[38;2;13;135;146m:\033[0m\033[38;2;13;136;145m:\033[0m\033[38;2;13;136;144m:\033[0m\033[38;2;12;136;143m:\033[0m\033[38;2;12;136;142m:\033[0m\033[38;2;11;137;141mt\033[0m\033[38;2;11;137;141m \033[0m\033[38;2;11;137;140m \033[0m\033[38;2;10;138;139m \033[0m\033[38;2;10;138;138m \033[0m
                \033[38;2;57;98;247mN\033[0m\033[38;2;57;98;246m:\033[0m\033[38;2;56;99;245m:\033[0m\033[38;2;56;99;244m:\033[0m\033[38;2;56;99;244m:\033[0m\033[38;2;55;100;243m:\033[0m\033[38;2;55;100;242m:\033[0m\033[38;2;54;100;241m:\033[0m\033[38;2;54;100;240mN\033[0m\033[38;2;54;101;239m:\033[0m\033[38;2;53;101;239m:\033[0m\033[38;2;53;101;238m:\033[0m\033[38;2;53;102;237m:\033[0m\033[38;2;52;102;236mN\033[0m\033[38;2;52;102;235m \033[0m\033[38;2;52;103;234m \033[0m\033[38;2;51;103;234mN\033[0m\033[38;2;51;103;233m:\033[0m\033[38;2;50;104;232m:\033[0m\033[38;2;50;104;231m:\033[0m\033[38;2;50;104;230m:\033[0m\033[38;2;49;104;229m:\033[0m\033[38;2;49;105;229m:\033[0m\033[38;2;49;105;228mN\033[0m\033[38;2;48;105;227m \033[0m\033[38;2;48;106;226m \033[0m\033[38;2;48;106;225ma\033[0m\033[38;2;47;106;224ma\033[0m\033[38;2;47;107;224ma\033[0m\033[38;2;47;107;223ma\033[0m\033[38;2;46;107;222ma\033[0m\033[38;2;46;108;221ma\033[0m\033[38;2;45;108;220ma\033[0m\033[38;2;45;108;219ma\033[0m\033[38;2;45;108;218ma\033[0m\033[38;2;44;109;218m:\033[0m\033[38;2;44;109;217m:\033[0m\033[38;2;44;109;216m:\033[0m\033[38;2;43;110;215m:\033[0m\033[38;2;43;110;214m:\033[0m\033[38;2;43;110;213ma\033[0m\033[38;2;42;111;213m \033[0m\033[38;2;42;111;212mN\033[0m\033[38;2;41;111;211m:\033[0m\033[38;2;41;112;210m:\033[0m\033[38;2;41;112;209m:\033[0m\033[38;2;40;112;208m:\033[0m\033[38;2;40;112;208m:\033[0m\033[38;2;40;113;207m:\033[0m\033[38;2;39;113;206m:\033[0m\033[38;2;39;113;205mN\033[0m\033[38;2;39;114;204m:\033[0m\033[38;2;38;114;203m:\033[0m\033[38;2;38;114;203m:\033[0m\033[38;2;37;115;202m:\033[0m\033[38;2;37;115;201mN\033[0m\033[38;2;37;115;200m \033[0m\033[38;2;36;116;199m \033[0m\033[38;2;36;116;198mN\033[0m\033[38;2;36;116;198m:\033[0m\033[38;2;35;116;197m:\033[0m\033[38;2;35;117;196m:\033[0m\033[38;2;35;117;195m:\033[0m\033[38;2;34;117;194m:\033[0m\033[38;2;34;118;193m:\033[0m\033[38;2;34;118;193mN\033[0m\033[38;2;33;118;192m \033[0m\033[38;2;33;119;191m \033[0m\033[38;2;32;119;190m \033[0m\033[38;2;32;119;189m \033[0m\033[38;2;32;120;188m \033[0m\033[38;2;31;120;187m \033[0m\033[38;2;31;120;187m \033[0m\033[38;2;31;120;186mB\033[0m\033[38;2;30;121;185m:\033[0m\033[38;2;30;121;184m:\033[0m\033[38;2;30;121;183m:\033[0m\033[38;2;29;122;182m:\033[0m\033[38;2;29;122;182mB\033[0m\033[38;2;28;122;181mB\033[0m\033[38;2;28;123;180mB\033[0m\033[38;2;28;123;179mB\033[0m\033[38;2;27;123;178mB\033[0m\033[38;2;27;124;177mB\033[0m\033[38;2;27;124;177m:\033[0m\033[38;2;26;124;176m:\033[0m\033[38;2;26;124;175m:\033[0m\033[38;2;26;125;174m:\033[0m\033[38;2;25;125;173m:\033[0m\033[38;2;25;125;172mB\033[0m\033[38;2;24;126;172m \033[0m\033[38;2;24;126;171mo\033[0m\033[38;2;24;126;170m:\033[0m\033[38;2;23;127;169m:\033[0m\033[38;2;23;127;168m:\033[0m\033[38;2;23;127;167m:\033[0m\033[38;2;22;128;167m:\033[0m\033[38;2;22;128;166m:\033[0m\033[38;2;22;128;165m:\033[0m\033[38;2;21;128;164m:\033[0m\033[38;2;21;129;163m:\033[0m\033[38;2;20;129;162m:\033[0m\033[38;2;20;129;161m:\033[0m\033[38;2;20;130;161m:\033[0m\033[38;2;19;130;160m:\033[0m\033[38;2;19;130;159m:\033[0m\033[38;2;19;131;158m:\033[0m\033[38;2;18;131;157mo\033[0m\033[38;2;18;131;156mt\033[0m\033[38;2;18;132;156m:\033[0m\033[38;2;17;132;155m:\033[0m\033[38;2;17;132;154m:\033[0m\033[38;2;17;132;153m:\033[0m\033[38;2;16;133;152m:\033[0m\033[38;2;16;133;151m:\033[0m\033[38;2;15;133;151m:\033[0m\033[38;2;15;134;150m:\033[0m\033[38;2;15;134;149m:\033[0m\033[38;2;14;134;148m:\033[0m\033[38;2;14;135;147m:\033[0m\033[38;2;14;135;146m:\033[0m\033[38;2;13;135;146m:\033[0m\033[38;2;13;136;145m:\033[0m\033[38;2;13;136;144m:\033[0m\033[38;2;12;136;143m:\033[0m\033[38;2;12;136;142m:\033[0m\033[38;2;11;137;141mt\033[0m\033[38;2;11;137;141m \033[0m\033[38;2;11;137;140m \033[0m\033[38;2;10;138;139m \033[0m\033[38;2;10;138;138m \033[0m
                \033[38;2;57;98;247mN\033[0m\033[38;2;57;98;246m:\033[0m\033[38;2;56;99;245m:\033[0m\033[38;2;56;99;244m:\033[0m\033[38;2;56;99;244m:\033[0m\033[38;2;55;100;243m:\033[0m\033[38;2;55;100;242m:\033[0m\033[38;2;54;100;241mN\033[0m\033[38;2;54;100;240m \033[0m\033[38;2;54;101;239mN\033[0m\033[38;2;53;101;239m:\033[0m\033[38;2;53;101;238m:\033[0m\033[38;2;53;102;237m:\033[0m\033[38;2;52;102;236m:\033[0m\033[38;2;52;102;235mN\033[0m\033[38;2;52;103;234m \033[0m\033[38;2;51;103;234mN\033[0m\033[38;2;51;103;233m:\033[0m\033[38;2;50;104;232m:\033[0m\033[38;2;50;104;231m:\033[0m\033[38;2;50;104;230m:\033[0m\033[38;2;49;104;229m:\033[0m\033[38;2;49;105;229m:\033[0m\033[38;2;49;105;228mN\033[0m\033[38;2;48;105;227m \033[0m\033[38;2;48;106;226m \033[0m\033[38;2;48;106;225m \033[0m\033[38;2;47;106;224m \033[0m\033[38;2;47;107;224m \033[0m\033[38;2;47;107;223m \033[0m\033[38;2;46;107;222m \033[0m\033[38;2;46;108;221m \033[0m\033[38;2;45;108;220m \033[0m\033[38;2;45;108;219m \033[0m\033[38;2;45;108;218m \033[0m\033[38;2;44;109;218ma\033[0m\033[38;2;44;109;217m:\033[0m\033[38;2;44;109;216m:\033[0m\033[38;2;43;110;215m:\033[0m\033[38;2;43;110;214m:\033[0m\033[38;2;43;110;213ma\033[0m\033[38;2;42;111;213m \033[0m\033[38;2;42;111;212mN\033[0m\033[38;2;41;111;211m:\033[0m\033[38;2;41;112;210m:\033[0m\033[38;2;41;112;209m:\033[0m\033[38;2;40;112;208m:\033[0m\033[38;2;40;112;208m:\033[0m\033[38;2;40;113;207m:\033[0m\033[38;2;39;113;206mN\033[0m\033[38;2;39;113;205m \033[0m\033[38;2;39;114;204mN\033[0m\033[38;2;38;114;203m:\033[0m\033[38;2;38;114;203m:\033[0m\033[38;2;37;115;202m:\033[0m\033[38;2;37;115;201m:\033[0m\033[38;2;37;115;200mN\033[0m\033[38;2;36;116;199m \033[0m\033[38;2;36;116;198mN\033[0m\033[38;2;36;116;198m:\033[0m\033[38;2;35;116;197m:\033[0m\033[38;2;35;117;196m:\033[0m\033[38;2;35;117;195m:\033[0m\033[38;2;34;117;194m:\033[0m\033[38;2;34;118;193m:\033[0m\033[38;2;34;118;193mN\033[0m\033[38;2;33;118;192m \033[0m\033[38;2;33;119;191m \033[0m\033[38;2;32;119;190m \033[0m\033[38;2;32;119;189m \033[0m\033[38;2;32;120;188m \033[0m\033[38;2;31;120;187m \033[0m\033[38;2;31;120;187m \033[0m\033[38;2;31;120;186mB\033[0m\033[38;2;30;121;185m:\033[0m\033[38;2;30;121;184m:\033[0m\033[38;2;30;121;183m:\033[0m\033[38;2;29;122;182m:\033[0m\033[38;2;29;122;182m:\033[0m\033[38;2;28;122;181m:\033[0m\033[38;2;28;123;180m:\033[0m\033[38;2;28;123;179m:\033[0m\033[38;2;27;123;178m:\033[0m\033[38;2;27;124;177m:\033[0m\033[38;2;27;124;177m:\033[0m\033[38;2;26;124;176m:\033[0m\033[38;2;26;124;175m:\033[0m\033[38;2;26;125;174mB\033[0m\033[38;2;25;125;173mB\033[0m\033[38;2;25;125;172m \033[0m\033[38;2;24;126;172m \033[0m\033[38;2;24;126;171mo\033[0m\033[38;2;24;126;170m:\033[0m\033[38;2;23;127;169m:\033[0m\033[38;2;23;127;168m:\033[0m\033[38;2;23;127;167m:\033[0m\033[38;2;22;128;167m:\033[0m\033[38;2;22;128;166mo\033[0m\033[38;2;22;128;165mo\033[0m\033[38;2;21;128;164mo\033[0m\033[38;2;21;129;163mo\033[0m\033[38;2;20;129;162mo\033[0m\033[38;2;20;129;161m:\033[0m\033[38;2;20;130;161m:\033[0m\033[38;2;19;130;160m:\033[0m\033[38;2;19;130;159m:\033[0m\033[38;2;19;131;158m:\033[0m\033[38;2;18;131;157mo\033[0m\033[38;2;18;131;156mt\033[0m\033[38;2;18;132;156mt\033[0m\033[38;2;17;132;155mt\033[0m\033[38;2;17;132;154mt\033[0m\033[38;2;17;132;153mt\033[0m\033[38;2;16;133;152mt\033[0m\033[38;2;16;133;151m:\033[0m\033[38;2;15;133;151m:\033[0m\033[38;2;15;134;150m:\033[0m\033[38;2;15;134;149m:\033[0m\033[38;2;14;134;148m:\033[0m\033[38;2;14;135;147m:\033[0m\033[38;2;14;135;146m:\033[0m\033[38;2;13;135;146mt\033[0m\033[38;2;13;136;145mt\033[0m\033[38;2;13;136;144mt\033[0m\033[38;2;12;136;143mt\033[0m\033[38;2;12;136;142mt\033[0m\033[38;2;11;137;141mt\033[0m\033[38;2;11;137;141m \033[0m\033[38;2;11;137;140m \033[0m\033[38;2;10;138;139m \033[0m\033[38;2;10;138;138m \033[0m
                \033[38;2;57;98;247mN\033[0m\033[38;2;57;98;246m:\033[0m\033[38;2;56;99;245m:\033[0m\033[38;2;56;99;244m:\033[0m\033[38;2;56;99;244m:\033[0m\033[38;2;55;100;243m:\033[0m\033[38;2;55;100;242m:\033[0m\033[38;2;54;100;241mN\033[0m\033[38;2;54;100;240m \033[0m\033[38;2;54;101;239m \033[0m\033[38;2;53;101;239mN\033[0m\033[38;2;53;101;238m:\033[0m\033[38;2;53;102;237m:\033[0m\033[38;2;52;102;236m:\033[0m\033[38;2;52;102;235m:\033[0m\033[38;2;52;103;234mN\033[0m\033[38;2;51;103;234m:\033[0m\033[38;2;51;103;233m:\033[0m\033[38;2;50;104;232m:\033[0m\033[38;2;50;104;231m:\033[0m\033[38;2;50;104;230m:\033[0m\033[38;2;49;104;229m:\033[0m\033[38;2;49;105;229m:\033[0m\033[38;2;49;105;228mN\033[0m\033[38;2;48;105;227m \033[0m\033[38;2;48;106;226m \033[0m\033[38;2;48;106;225m \033[0m\033[38;2;47;106;224m \033[0m\033[38;2;47;107;224ma\033[0m\033[38;2;47;107;223ma\033[0m\033[38;2;46;107;222ma\033[0m\033[38;2;46;108;221ma\033[0m\033[38;2;45;108;220ma\033[0m\033[38;2;45;108;219ma\033[0m\033[38;2;45;108;218ma\033[0m\033[38;2;44;109;218m:\033[0m\033[38;2;44;109;217m:\033[0m\033[38;2;44;109;216m:\033[0m\033[38;2;43;110;215m:\033[0m\033[38;2;43;110;214m:\033[0m\033[38;2;43;110;213ma\033[0m\033[38;2;42;111;213m \033[0m\033[38;2;42;111;212mN\033[0m\033[38;2;41;111;211m:\033[0m\033[38;2;41;112;210m:\033[0m\033[38;2;41;112;209m:\033[0m\033[38;2;40;112;208m:\033[0m\033[38;2;40;112;208m:\033[0m\033[38;2;40;113;207m:\033[0m\033[38;2;39;113;206mN\033[0m\033[38;2;39;113;205m \033[0m\033[38;2;39;114;204m \033[0m\033[38;2;38;114;203mN\033[0m\033[38;2;38;114;203m:\033[0m\033[38;2;37;115;202m:\033[0m\033[38;2;37;115;201m:\033[0m\033[38;2;37;115;200m:\033[0m\033[38;2;36;116;199mN\033[0m\033[38;2;36;116;198m:\033[0m\033[38;2;36;116;198m:\033[0m\033[38;2;35;116;197m:\033[0m\033[38;2;35;117;196m:\033[0m\033[38;2;35;117;195m:\033[0m\033[38;2;34;117;194m:\033[0m\033[38;2;34;118;193m:\033[0m\033[38;2;34;118;193mN\033[0m\033[38;2;33;118;192m \033[0m\033[38;2;33;119;191m \033[0m\033[38;2;32;119;190m \033[0m\033[38;2;32;119;189m \033[0m\033[38;2;32;120;188m \033[0m\033[38;2;31;120;187m \033[0m\033[38;2;31;120;187m \033[0m\033[38;2;31;120;186mB\033[0m\033[38;2;30;121;185m:\033[0m\033[38;2;30;121;184m:\033[0m\033[38;2;30;121;183m:\033[0m\033[38;2;29;122;182m:\033[0m\033[38;2;29;122;182mB\033[0m\033[38;2;28;122;181mB\033[0m\033[38;2;28;123;180mB\033[0m\033[38;2;28;123;179mB\033[0m\033[38;2;27;123;178mB\033[0m\033[38;2;27;124;177mB\033[0m\033[38;2;27;124;177m:\033[0m\033[38;2;26;124;176m:\033[0m\033[38;2;26;124;175m:\033[0m\033[38;2;26;125;174m:\033[0m\033[38;2;25;125;173m:\033[0m\033[38;2;25;125;172mB\033[0m\033[38;2;24;126;172m \033[0m\033[38;2;24;126;171mo\033[0m\033[38;2;24;126;170m:\033[0m\033[38;2;23;127;169m:\033[0m\033[38;2;23;127;168m:\033[0m\033[38;2;23;127;167m:\033[0m\033[38;2;22;128;167mo\033[0m\033[38;2;22;128;166m \033[0m\033[38;2;22;128;165m \033[0m\033[38;2;21;128;164m \033[0m\033[38;2;21;129;163m \033[0m\033[38;2;20;129;162m \033[0m\033[38;2;20;129;161mo\033[0m\033[38;2;20;130;161m:\033[0m\033[38;2;19;130;160m:\033[0m\033[38;2;19;130;159m:\033[0m\033[38;2;19;131;158m:\033[0m\033[38;2;18;131;157mo\033[0m\033[38;2;18;131;156m \033[0m\033[38;2;18;132;156m \033[0m\033[38;2;17;132;155m \033[0m\033[38;2;17;132;154m \033[0m\033[38;2;17;132;153m \033[0m\033[38;2;16;133;152m \033[0m\033[38;2;16;133;151mt\033[0m\033[38;2;15;133;151m:\033[0m\033[38;2;15;134;150m:\033[0m\033[38;2;15;134;149m:\033[0m\033[38;2;14;134;148m:\033[0m\033[38;2;14;135;147m:\033[0m\033[38;2;14;135;146mt\033[0m\033[38;2;13;135;146m \033[0m\033[38;2;13;136;145m \033[0m\033[38;2;13;136;144m \033[0m\033[38;2;12;136;143m \033[0m\033[38;2;12;136;142m \033[0m\033[38;2;11;137;141m \033[0m\033[38;2;11;137;141m \033[0m\033[38;2;11;137;140m \033[0m\033[38;2;10;138;139m \033[0m\033[38;2;10;138;138m \033[0m
                \033[38;2;57;98;247mN\033[0m\033[38;2;57;98;246m:\033[0m\033[38;2;56;99;245m:\033[0m\033[38;2;56;99;244m:\033[0m\033[38;2;56;99;244m:\033[0m\033[38;2;55;100;243m:\033[0m\033[38;2;55;100;242m:\033[0m\033[38;2;54;100;241mN\033[0m\033[38;2;54;100;240m \033[0m\033[38;2;54;101;239m \033[0m\033[38;2;53;101;239m \033[0m\033[38;2;53;101;238mN\033[0m\033[38;2;53;102;237m:\033[0m\033[38;2;52;102;236m:\033[0m\033[38;2;52;102;235m:\033[0m\033[38;2;52;103;234m:\033[0m\033[38;2;51;103;234m:\033[0m\033[38;2;51;103;233m:\033[0m\033[38;2;50;104;232m:\033[0m\033[38;2;50;104;231m:\033[0m\033[38;2;50;104;230m:\033[0m\033[38;2;49;104;229m:\033[0m\033[38;2;49;105;229m:\033[0m\033[38;2;49;105;228mN\033[0m\033[38;2;48;105;227m \033[0m\033[38;2;48;106;226m \033[0m\033[38;2;48;106;225ma\033[0m\033[38;2;47;106;224ma\033[0m\033[38;2;47;107;224m:\033[0m\033[38;2;47;107;223m:\033[0m\033[38;2;46;107;222m:\033[0m\033[38;2;46;108;221m:\033[0m\033[38;2;45;108;220m:\033[0m\033[38;2;45;108;219m:\033[0m\033[38;2;45;108;218m:\033[0m\033[38;2;44;109;218m:\033[0m\033[38;2;44;109;217m:\033[0m\033[38;2;44;109;216m:\033[0m\033[38;2;43;110;215m:\033[0m\033[38;2;43;110;214m:\033[0m\033[38;2;43;110;213ma\033[0m\033[38;2;42;111;213m \033[0m\033[38;2;42;111;212mN\033[0m\033[38;2;41;111;211m:\033[0m\033[38;2;41;112;210m:\033[0m\033[38;2;41;112;209m:\033[0m\033[38;2;40;112;208m:\033[0m\033[38;2;40;112;208m:\033[0m\033[38;2;40;113;207m:\033[0m\033[38;2;39;113;206mN\033[0m\033[38;2;39;113;205m \033[0m\033[38;2;39;114;204m \033[0m\033[38;2;38;114;203m \033[0m\033[38;2;38;114;203mN\033[0m\033[38;2;37;115;202m:\033[0m\033[38;2;37;115;201m:\033[0m\033[38;2;37;115;200m:\033[0m\033[38;2;36;116;199m:\033[0m\033[38;2;36;116;198m:\033[0m\033[38;2;36;116;198m:\033[0m\033[38;2;35;116;197m:\033[0m\033[38;2;35;117;196m:\033[0m\033[38;2;35;117;195m:\033[0m\033[38;2;34;117;194m:\033[0m\033[38;2;34;118;193m:\033[0m\033[38;2;34;118;193mN\033[0m\033[38;2;33;118;192m \033[0m\033[38;2;33;119;191m \033[0m\033[38;2;32;119;190m \033[0m\033[38;2;32;119;189m \033[0m\033[38;2;32;120;188m \033[0m\033[38;2;31;120;187m \033[0m\033[38;2;31;120;187m \033[0m\033[38;2;31;120;186mB\033[0m\033[38;2;30;121;185m:\033[0m\033[38;2;30;121;184m:\033[0m\033[38;2;30;121;183m:\033[0m\033[38;2;29;122;182m:\033[0m\033[38;2;29;122;182mB\033[0m\033[38;2;28;122;181m \033[0m\033[38;2;28;123;180m \033[0m\033[38;2;28;123;179m \033[0m\033[38;2;27;123;178m \033[0m\033[38;2;27;124;177m \033[0m\033[38;2;27;124;177mB\033[0m\033[38;2;26;124;176m:\033[0m\033[38;2;26;124;175m:\033[0m\033[38;2;26;125;174m:\033[0m\033[38;2;25;125;173m:\033[0m\033[38;2;25;125;172m:\033[0m\033[38;2;24;126;172mB\033[0m\033[38;2;24;126;171mo\033[0m\033[38;2;24;126;170m:\033[0m\033[38;2;23;127;169m:\033[0m\033[38;2;23;127;168m:\033[0m\033[38;2;23;127;167m:\033[0m\033[38;2;22;128;167mo\033[0m\033[38;2;22;128;166m \033[0m\033[38;2;22;128;165m \033[0m\033[38;2;21;128;164m \033[0m\033[38;2;21;129;163m \033[0m\033[38;2;20;129;162m \033[0m\033[38;2;20;129;161mo\033[0m\033[38;2;20;130;161m:\033[0m\033[38;2;19;130;160m:\033[0m\033[38;2;19;130;159m:\033[0m\033[38;2;19;131;158m:\033[0m\033[38;2;18;131;157mo\033[0m\033[38;2;18;131;156m \033[0m\033[38;2;18;132;156m \033[0m\033[38;2;17;132;155m \033[0m\033[38;2;17;132;154m \033[0m\033[38;2;17;132;153m \033[0m\033[38;2;16;133;152m \033[0m\033[38;2;16;133;151mt\033[0m\033[38;2;15;133;151m:\033[0m\033[38;2;15;134;150m:\033[0m\033[38;2;15;134;149m:\033[0m\033[38;2;14;134;148m:\033[0m\033[38;2;14;135;147m:\033[0m\033[38;2;14;135;146mt\033[0m\033[38;2;13;135;146m \033[0m\033[38;2;13;136;145m \033[0m\033[38;2;13;136;144m \033[0m\033[38;2;12;136;143m \033[0m\033[38;2;12;136;142m \033[0m\033[38;2;11;137;141m \033[0m\033[38;2;11;137;141m \033[0m\033[38;2;11;137;140m \033[0m\033[38;2;10;138;139m \033[0m\033[38;2;10;138;138m \033[0m
                \033[38;2;57;98;247mN\033[0m\033[38;2;57;98;246m:\033[0m\033[38;2;56;99;245m:\033[0m\033[38;2;56;99;244m:\033[0m\033[38;2;56;99;244m:\033[0m\033[38;2;55;100;243m:\033[0m\033[38;2;55;100;242m:\033[0m\033[38;2;54;100;241mN\033[0m\033[38;2;54;100;240m \033[0m\033[38;2;54;101;239m \033[0m\033[38;2;53;101;239m \033[0m\033[38;2;53;101;238m \033[0m\033[38;2;53;102;237mN\033[0m\033[38;2;52;102;236m:\033[0m\033[38;2;52;102;235m:\033[0m\033[38;2;52;103;234m:\033[0m\033[38;2;51;103;234m:\033[0m\033[38;2;51;103;233m:\033[0m\033[38;2;50;104;232m:\033[0m\033[38;2;50;104;231m:\033[0m\033[38;2;50;104;230m:\033[0m\033[38;2;49;104;229m:\033[0m\033[38;2;49;105;229m:\033[0m\033[38;2;49;105;228mN\033[0m\033[38;2;48;105;227m \033[0m\033[38;2;48;106;226ma\033[0m\033[38;2;48;106;225m:\033[0m\033[38;2;47;106;224m:\033[0m\033[38;2;47;107;224m:\033[0m\033[38;2;47;107;223m:\033[0m\033[38;2;46;107;222ma\033[0m\033[38;2;46;108;221ma\033[0m\033[38;2;45;108;220ma\033[0m\033[38;2;45;108;219ma\033[0m\033[38;2;45;108;218m:\033[0m\033[38;2;44;109;218m:\033[0m\033[38;2;44;109;217m:\033[0m\033[38;2;44;109;216m:\033[0m\033[38;2;43;110;215m:\033[0m\033[38;2;43;110;214m:\033[0m\033[38;2;43;110;213ma\033[0m\033[38;2;42;111;213m \033[0m\033[38;2;42;111;212mN\033[0m\033[38;2;41;111;211m:\033[0m\033[38;2;41;112;210m:\033[0m\033[38;2;41;112;209m:\033[0m\033[38;2;40;112;208m:\033[0m\033[38;2;40;112;208m:\033[0m\033[38;2;40;113;207m:\033[0m\033[38;2;39;113;206mN\033[0m\033[38;2;39;113;205m \033[0m\033[38;2;39;114;204m \033[0m\033[38;2;38;114;203m \033[0m\033[38;2;38;114;203m \033[0m\033[38;2;37;115;202mN\033[0m\033[38;2;37;115;201m:\033[0m\033[38;2;37;115;200m:\033[0m\033[38;2;36;116;199m:\033[0m\033[38;2;36;116;198m:\033[0m\033[38;2;36;116;198m:\033[0m\033[38;2;35;116;197m:\033[0m\033[38;2;35;117;196m:\033[0m\033[38;2;35;117;195m:\033[0m\033[38;2;34;117;194m:\033[0m\033[38;2;34;118;193m:\033[0m\033[38;2;34;118;193mN\033[0m\033[38;2;33;118;192m \033[0m\033[38;2;33;119;191m \033[0m\033[38;2;32;119;190m \033[0m\033[38;2;32;119;189m \033[0m\033[38;2;32;120;188m \033[0m\033[38;2;31;120;187m \033[0m\033[38;2;31;120;187m \033[0m\033[38;2;31;120;186mB\033[0m\033[38;2;30;121;185m:\033[0m\033[38;2;30;121;184m:\033[0m\033[38;2;30;121;183m:\033[0m\033[38;2;29;122;182m:\033[0m\033[38;2;29;122;182mB\033[0m\033[38;2;28;122;181m \033[0m\033[38;2;28;123;180m \033[0m\033[38;2;28;123;179m \033[0m\033[38;2;27;123;178m \033[0m\033[38;2;27;124;177m \033[0m\033[38;2;27;124;177mB\033[0m\033[38;2;26;124;176m:\033[0m\033[38;2;26;124;175m:\033[0m\033[38;2;26;125;174m:\033[0m\033[38;2;25;125;173m:\033[0m\033[38;2;25;125;172m:\033[0m\033[38;2;24;126;172mB\033[0m\033[38;2;24;126;171mo\033[0m\033[38;2;24;126;170m:\033[0m\033[38;2;23;127;169m:\033[0m\033[38;2;23;127;168m:\033[0m\033[38;2;23;127;167m:\033[0m\033[38;2;22;128;167mo\033[0m\033[38;2;22;128;166m \033[0m\033[38;2;22;128;165m \033[0m\033[38;2;21;128;164m \033[0m\033[38;2;21;129;163m \033[0m\033[38;2;20;129;162m \033[0m\033[38;2;20;129;161mo\033[0m\033[38;2;20;130;161m:\033[0m\033[38;2;19;130;160m:\033[0m\033[38;2;19;130;159m:\033[0m\033[38;2;19;131;158m:\033[0m\033[38;2;18;131;157mo\033[0m\033[38;2;18;131;156m \033[0m\033[38;2;18;132;156m \033[0m\033[38;2;17;132;155m \033[0m\033[38;2;17;132;154m \033[0m\033[38;2;17;132;153m \033[0m\033[38;2;16;133;152m \033[0m\033[38;2;16;133;151mt\033[0m\033[38;2;15;133;151m:\033[0m\033[38;2;15;134;150m:\033[0m\033[38;2;15;134;149m:\033[0m\033[38;2;14;134;148m:\033[0m\033[38;2;14;135;147m:\033[0m\033[38;2;14;135;146mt\033[0m\033[38;2;13;135;146m \033[0m\033[38;2;13;136;145m \033[0m\033[38;2;13;136;144m \033[0m\033[38;2;12;136;143m \033[0m\033[38;2;12;136;142m \033[0m\033[38;2;11;137;141m \033[0m\033[38;2;11;137;141m \033[0m\033[38;2;11;137;140m \033[0m\033[38;2;10;138;139m \033[0m\033[38;2;10;138;138m \033[0m
                \033[38;2;57;98;247mN\033[0m\033[38;2;57;98;246m:\033[0m\033[38;2;56;99;245m:\033[0m\033[38;2;56;99;244m:\033[0m\033[38;2;56;99;244m:\033[0m\033[38;2;55;100;243m:\033[0m\033[38;2;55;100;242m:\033[0m\033[38;2;54;100;241mN\033[0m\033[38;2;54;100;240m \033[0m\033[38;2;54;101;239m \033[0m\033[38;2;53;101;239m \033[0m\033[38;2;53;101;238m \033[0m\033[38;2;53;102;237m \033[0m\033[38;2;52;102;236mN\033[0m\033[38;2;52;102;235m:\033[0m\033[38;2;52;103;234m:\033[0m\033[38;2;51;103;234m:\033[0m\033[38;2;51;103;233m:\033[0m\033[38;2;50;104;232m:\033[0m\033[38;2;50;104;231m:\033[0m\033[38;2;50;104;230m:\033[0m\033[38;2;49;104;229m:\033[0m\033[38;2;49;105;229m:\033[0m\033[38;2;49;105;228mN\033[0m\033[38;2;48;105;227ma\033[0m\033[38;2;48;106;226m:\033[0m\033[38;2;48;106;225m:\033[0m\033[38;2;47;106;224m:\033[0m\033[38;2;47;107;224m:\033[0m\033[38;2;47;107;223ma\033[0m\033[38;2;46;107;222m \033[0m\033[38;2;46;108;221m \033[0m\033[38;2;45;108;220m \033[0m\033[38;2;45;108;219m \033[0m\033[38;2;45;108;218ma\033[0m\033[38;2;44;109;218m:\033[0m\033[38;2;44;109;217m:\033[0m\033[38;2;44;109;216m:\033[0m\033[38;2;43;110;215m:\033[0m\033[38;2;43;110;214m:\033[0m\033[38;2;43;110;213ma\033[0m\033[38;2;42;111;213m \033[0m\033[38;2;42;111;212mN\033[0m\033[38;2;41;111;211m:\033[0m\033[38;2;41;112;210m:\033[0m\033[38;2;41;112;209m:\033[0m\033[38;2;40;112;208m:\033[0m\033[38;2;40;112;208m:\033[0m\033[38;2;40;113;207m:\033[0m\033[38;2;39;113;206mN\033[0m\033[38;2;39;113;205m \033[0m\033[38;2;39;114;204m \033[0m\033[38;2;38;114;203m \033[0m\033[38;2;38;114;203m \033[0m\033[38;2;37;115;202m \033[0m\033[38;2;37;115;201mN\033[0m\033[38;2;37;115;200m:\033[0m\033[38;2;36;116;199m:\033[0m\033[38;2;36;116;198m:\033[0m\033[38;2;36;116;198m:\033[0m\033[38;2;35;116;197m:\033[0m\033[38;2;35;117;196m:\033[0m\033[38;2;35;117;195m:\033[0m\033[38;2;34;117;194m:\033[0m\033[38;2;34;118;193m:\033[0m\033[38;2;34;118;193mN\033[0m\033[38;2;33;118;192m \033[0m\033[38;2;33;119;191m \033[0m\033[38;2;32;119;190m \033[0m\033[38;2;32;119;189m \033[0m\033[38;2;32;120;188m \033[0m\033[38;2;31;120;187m \033[0m\033[38;2;31;120;187m \033[0m\033[38;2;31;120;186mB\033[0m\033[38;2;30;121;185m:\033[0m\033[38;2;30;121;184m:\033[0m\033[38;2;30;121;183m:\033[0m\033[38;2;29;122;182m:\033[0m\033[38;2;29;122;182mB\033[0m\033[38;2;28;122;181m \033[0m\033[38;2;28;123;180m \033[0m\033[38;2;28;123;179m \033[0m\033[38;2;27;123;178m \033[0m\033[38;2;27;124;177m \033[0m\033[38;2;27;124;177mB\033[0m\033[38;2;26;124;176m:\033[0m\033[38;2;26;124;175m:\033[0m\033[38;2;26;125;174m:\033[0m\033[38;2;25;125;173m:\033[0m\033[38;2;25;125;172m:\033[0m\033[38;2;24;126;172mB\033[0m\033[38;2;24;126;171mo\033[0m\033[38;2;24;126;170m:\033[0m\033[38;2;23;127;169m:\033[0m\033[38;2;23;127;168m:\033[0m\033[38;2;23;127;167m:\033[0m\033[38;2;22;128;167mo\033[0m\033[38;2;22;128;166m \033[0m\033[38;2;22;128;165m \033[0m\033[38;2;21;128;164m \033[0m\033[38;2;21;129;163m \033[0m\033[38;2;20;129;162m \033[0m\033[38;2;20;129;161mo\033[0m\033[38;2;20;130;161m:\033[0m\033[38;2;19;130;160m:\033[0m\033[38;2;19;130;159m:\033[0m\033[38;2;19;131;158m:\033[0m\033[38;2;18;131;157mo\033[0m\033[38;2;18;131;156m \033[0m\033[38;2;18;132;156m \033[0m\033[38;2;17;132;155m \033[0m\033[38;2;17;132;154m \033[0m\033[38;2;17;132;153m \033[0m\033[38;2;16;133;152m \033[0m\033[38;2;16;133;151mt\033[0m\033[38;2;15;133;151m:\033[0m\033[38;2;15;134;150m:\033[0m\033[38;2;15;134;149m:\033[0m\033[38;2;14;134;148m:\033[0m\033[38;2;14;135;147m:\033[0m\033[38;2;14;135;146mt\033[0m\033[38;2;13;135;146m \033[0m\033[38;2;13;136;145m \033[0m\033[38;2;13;136;144m \033[0m\033[38;2;12;136;143m \033[0m\033[38;2;12;136;142mt\033[0m\033[38;2;11;137;141mt\033[0m\033[38;2;11;137;141mt\033[0m\033[38;2;11;137;140mt\033[0m\033[38;2;10;138;139mt\033[0m\033[38;2;10;138;138mt\033[0m
                \033[38;2;57;98;247mN\033[0m\033[38;2;57;98;246m:\033[0m\033[38;2;56;99;245m:\033[0m\033[38;2;56;99;244m:\033[0m\033[38;2;56;99;244m:\033[0m\033[38;2;55;100;243m:\033[0m\033[38;2;55;100;242m:\033[0m\033[38;2;54;100;241mN\033[0m\033[38;2;54;100;240m \033[0m\033[38;2;54;101;239m \033[0m\033[38;2;53;101;239m \033[0m\033[38;2;53;101;238m \033[0m\033[38;2;53;102;237m \033[0m\033[38;2;52;102;236m \033[0m\033[38;2;52;102;235mN\033[0m\033[38;2;52;103;234m:\033[0m\033[38;2;51;103;234m:\033[0m\033[38;2;51;103;233m:\033[0m\033[38;2;50;104;232m:\033[0m\033[38;2;50;104;231m:\033[0m\033[38;2;50;104;230m:\033[0m\033[38;2;49;104;229m:\033[0m\033[38;2;49;105;229m:\033[0m\033[38;2;49;105;228mN\033[0m\033[38;2;48;105;227ma\033[0m\033[38;2;48;106;226m:\033[0m\033[38;2;48;106;225m:\033[0m\033[38;2;47;106;224m:\033[0m\033[38;2;47;107;224m:\033[0m\033[38;2;47;107;223ma\033[0m\033[38;2;46;107;222m \033[0m\033[38;2;46;108;221m \033[0m\033[38;2;45;108;220m \033[0m\033[38;2;45;108;219m \033[0m\033[38;2;45;108;218ma\033[0m\033[38;2;44;109;218m:\033[0m\033[38;2;44;109;217m:\033[0m\033[38;2;44;109;216m:\033[0m\033[38;2;43;110;215m:\033[0m\033[38;2;43;110;214m:\033[0m\033[38;2;43;110;213ma\033[0m\033[38;2;42;111;213m \033[0m\033[38;2;42;111;212mN\033[0m\033[38;2;41;111;211m:\033[0m\033[38;2;41;112;210m:\033[0m\033[38;2;41;112;209m:\033[0m\033[38;2;40;112;208m:\033[0m\033[38;2;40;112;208m:\033[0m\033[38;2;40;113;207m:\033[0m\033[38;2;39;113;206mN\033[0m\033[38;2;39;113;205m \033[0m\033[38;2;39;114;204m \033[0m\033[38;2;38;114;203m \033[0m\033[38;2;38;114;203m \033[0m\033[38;2;37;115;202m \033[0m\033[38;2;37;115;201m \033[0m\033[38;2;37;115;200mN\033[0m\033[38;2;36;116;199m:\033[0m\033[38;2;36;116;198m:\033[0m\033[38;2;36;116;198m:\033[0m\033[38;2;35;116;197m:\033[0m\033[38;2;35;117;196m:\033[0m\033[38;2;35;117;195m:\033[0m\033[38;2;34;117;194m:\033[0m\033[38;2;34;118;193m:\033[0m\033[38;2;34;118;193mN\033[0m\033[38;2;33;118;192m \033[0m\033[38;2;33;119;191m \033[0m\033[38;2;32;119;190m \033[0m\033[38;2;32;119;189m \033[0m\033[38;2;32;120;188m \033[0m\033[38;2;31;120;187mB\033[0m\033[38;2;31;120;187mB\033[0m\033[38;2;31;120;186m:\033[0m\033[38;2;30;121;185m:\033[0m\033[38;2;30;121;184m:\033[0m\033[38;2;30;121;183m:\033[0m\033[38;2;29;122;182m:\033[0m\033[38;2;29;122;182mB\033[0m\033[38;2;28;122;181mB\033[0m\033[38;2;28;123;180mB\033[0m\033[38;2;28;123;179mB\033[0m\033[38;2;27;123;178mB\033[0m\033[38;2;27;124;177mB\033[0m\033[38;2;27;124;177m:\033[0m\033[38;2;26;124;176m:\033[0m\033[38;2;26;124;175m:\033[0m\033[38;2;26;125;174m:\033[0m\033[38;2;25;125;173m:\033[0m\033[38;2;25;125;172m:\033[0m\033[38;2;24;126;172mB\033[0m\033[38;2;24;126;171mo\033[0m\033[38;2;24;126;170m:\033[0m\033[38;2;23;127;169m:\033[0m\033[38;2;23;127;168m:\033[0m\033[38;2;23;127;167m:\033[0m\033[38;2;22;128;167m:\033[0m\033[38;2;22;128;166mo\033[0m\033[38;2;22;128;165mo\033[0m\033[38;2;21;128;164mo\033[0m\033[38;2;21;129;163mo\033[0m\033[38;2;20;129;162mo\033[0m\033[38;2;20;129;161m:\033[0m\033[38;2;20;130;161m:\033[0m\033[38;2;19;130;160m:\033[0m\033[38;2;19;130;159m:\033[0m\033[38;2;19;131;158m:\033[0m\033[38;2;18;131;157mo\033[0m\033[38;2;18;131;156m \033[0m\033[38;2;18;132;156m \033[0m\033[38;2;17;132;155m \033[0m\033[38;2;17;132;154m \033[0m\033[38;2;17;132;153m \033[0m\033[38;2;16;133;152m \033[0m\033[38;2;16;133;151mt\033[0m\033[38;2;15;133;151m:\033[0m\033[38;2;15;134;150m:\033[0m\033[38;2;15;134;149m:\033[0m\033[38;2;14;134;148m:\033[0m\033[38;2;14;135;147m:\033[0m\033[38;2;14;135;146m:\033[0m\033[38;2;13;135;146mt\033[0m\033[38;2;13;136;145mt\033[0m\033[38;2;13;136;144mt\033[0m\033[38;2;12;136;143mt\033[0m\033[38;2;12;136;142m:\033[0m\033[38;2;11;137;141m:\033[0m\033[38;2;11;137;141m:\033[0m\033[38;2;11;137;140m:\033[0m\033[38;2;10;138;139m:\033[0m\033[38;2;10;138;138mt\033[0m
                \033[38;2;57;98;247mN\033[0m\033[38;2;57;98;246m:\033[0m\033[38;2;56;99;245m:\033[0m\033[38;2;56;99;244m:\033[0m\033[38;2;56;99;244m:\033[0m\033[38;2;55;100;243m:\033[0m\033[38;2;55;100;242m:\033[0m\033[38;2;54;100;241mN\033[0m\033[38;2;54;100;240m \033[0m\033[38;2;54;101;239m \033[0m\033[38;2;53;101;239m \033[0m\033[38;2;53;101;238m \033[0m\033[38;2;53;102;237m \033[0m\033[38;2;52;102;236m \033[0m\033[38;2;52;102;235m \033[0m\033[38;2;52;103;234mN\033[0m\033[38;2;51;103;234m:\033[0m\033[38;2;51;103;233m:\033[0m\033[38;2;50;104;232m:\033[0m\033[38;2;50;104;231m:\033[0m\033[38;2;50;104;230m:\033[0m\033[38;2;49;104;229m:\033[0m\033[38;2;49;105;229m:\033[0m\033[38;2;49;105;228mN\033[0m\033[38;2;48;105;227ma\033[0m\033[38;2;48;106;226m:\033[0m\033[38;2;48;106;225m:\033[0m\033[38;2;47;106;224m:\033[0m\033[38;2;47;107;224m:\033[0m\033[38;2;47;107;223m:\033[0m\033[38;2;46;107;222ma\033[0m\033[38;2;46;108;221ma\033[0m\033[38;2;45;108;220ma\033[0m\033[38;2;45;108;219ma\033[0m\033[38;2;45;108;218m:\033[0m\033[38;2;44;109;218m:\033[0m\033[38;2;44;109;217m:\033[0m\033[38;2;44;109;216m:\033[0m\033[38;2;43;110;215m:\033[0m\033[38;2;43;110;214m:\033[0m\033[38;2;43;110;213ma\033[0m\033[38;2;42;111;213m \033[0m\033[38;2;42;111;212mN\033[0m\033[38;2;41;111;211m:\033[0m\033[38;2;41;112;210m:\033[0m\033[38;2;41;112;209m:\033[0m\033[38;2;40;112;208m:\033[0m\033[38;2;40;112;208m:\033[0m\033[38;2;40;113;207m:\033[0m\033[38;2;39;113;206mN\033[0m\033[38;2;39;113;205m \033[0m\033[38;2;39;114;204m \033[0m\033[38;2;38;114;203m \033[0m\033[38;2;38;114;203m \033[0m\033[38;2;37;115;202m \033[0m\033[38;2;37;115;201m \033[0m\033[38;2;37;115;200m \033[0m\033[38;2;36;116;199mN\033[0m\033[38;2;36;116;198m:\033[0m\033[38;2;36;116;198m:\033[0m\033[38;2;35;116;197m:\033[0m\033[38;2;35;117;196m:\033[0m\033[38;2;35;117;195m:\033[0m\033[38;2;34;117;194m:\033[0m\033[38;2;34;118;193m:\033[0m\033[38;2;34;118;193mN\033[0m\033[38;2;33;118;192m \033[0m\033[38;2;33;119;191m \033[0m\033[38;2;32;119;190m \033[0m\033[38;2;32;119;189m \033[0m\033[38;2;32;120;188m \033[0m\033[38;2;31;120;187mB\033[0m\033[38;2;31;120;187m:\033[0m\033[38;2;31;120;186m:\033[0m\033[38;2;30;121;185m:\033[0m\033[38;2;30;121;184m:\033[0m\033[38;2;30;121;183m:\033[0m\033[38;2;29;122;182m:\033[0m\033[38;2;29;122;182m:\033[0m\033[38;2;28;122;181m:\033[0m\033[38;2;28;123;180m:\033[0m\033[38;2;28;123;179m:\033[0m\033[38;2;27;123;178m:\033[0m\033[38;2;27;124;177m:\033[0m\033[38;2;27;124;177m:\033[0m\033[38;2;26;124;176m:\033[0m\033[38;2;26;124;175m:\033[0m\033[38;2;26;125;174m:\033[0m\033[38;2;25;125;173m:\033[0m\033[38;2;25;125;172mB\033[0m\033[38;2;24;126;172m \033[0m\033[38;2;24;126;171mo\033[0m\033[38;2;24;126;170m:\033[0m\033[38;2;23;127;169m:\033[0m\033[38;2;23;127;168m:\033[0m\033[38;2;23;127;167m:\033[0m\033[38;2;22;128;167m:\033[0m\033[38;2;22;128;166m:\033[0m\033[38;2;22;128;165m:\033[0m\033[38;2;21;128;164m:\033[0m\033[38;2;21;129;163m:\033[0m\033[38;2;20;129;162m:\033[0m\033[38;2;20;129;161m:\033[0m\033[38;2;20;130;161m:\033[0m\033[38;2;19;130;160m:\033[0m\033[38;2;19;130;159m:\033[0m\033[38;2;19;131;158m:\033[0m\033[38;2;18;131;157mo\033[0m\033[38;2;18;131;156m \033[0m\033[38;2;18;132;156m \033[0m\033[38;2;17;132;155m \033[0m\033[38;2;17;132;154m \033[0m\033[38;2;17;132;153m \033[0m\033[38;2;16;133;152m \033[0m\033[38;2;16;133;151mt\033[0m\033[38;2;15;133;151mt\033[0m\033[38;2;15;134;150m:\033[0m\033[38;2;15;134;149m:\033[0m\033[38;2;14;134;148m:\033[0m\033[38;2;14;135;147m:\033[0m\033[38;2;14;135;146m:\033[0m\033[38;2;13;135;146m:\033[0m\033[38;2;13;136;145m:\033[0m\033[38;2;13;136;144m:\033[0m\033[38;2;12;136;143m:\033[0m\033[38;2;12;136;142m:\033[0m\033[38;2;11;137;141m:\033[0m\033[38;2;11;137;141m:\033[0m\033[38;2;11;137;140m:\033[0m\033[38;2;10;138;139m:\033[0m\033[38;2;10;138;138mt\033[0m
                \033[38;2;57;98;247mN\033[0m\033[38;2;57;98;246m:\033[0m\033[38;2;56;99;245m:\033[0m\033[38;2;56;99;244m:\033[0m\033[38;2;56;99;244m:\033[0m\033[38;2;55;100;243m:\033[0m\033[38;2;55;100;242m:\033[0m\033[38;2;54;100;241mN\033[0m\033[38;2;54;100;240m \033[0m\033[38;2;54;101;239m \033[0m\033[38;2;53;101;239m \033[0m\033[38;2;53;101;238m \033[0m\033[38;2;53;102;237m \033[0m\033[38;2;52;102;236m \033[0m\033[38;2;52;102;235m \033[0m\033[38;2;52;103;234m \033[0m\033[38;2;51;103;234mN\033[0m\033[38;2;51;103;233m:\033[0m\033[38;2;50;104;232m:\033[0m\033[38;2;50;104;231m:\033[0m\033[38;2;50;104;230m:\033[0m\033[38;2;49;104;229m:\033[0m\033[38;2;49;105;229m:\033[0m\033[38;2;49;105;228mN\033[0m\033[38;2;48;105;227m \033[0m\033[38;2;48;106;226ma\033[0m\033[38;2;48;106;225m:\033[0m\033[38;2;47;106;224m:\033[0m\033[38;2;47;107;224m:\033[0m\033[38;2;47;107;223m:\033[0m\033[38;2;46;107;222m:\033[0m\033[38;2;46;108;221m:\033[0m\033[38;2;45;108;220m:\033[0m\033[38;2;45;108;219m:\033[0m\033[38;2;45;108;218m:\033[0m\033[38;2;44;109;218m:\033[0m\033[38;2;44;109;217ma\033[0m\033[38;2;44;109;216ma\033[0m\033[38;2;43;110;215m:\033[0m\033[38;2;43;110;214m:\033[0m\033[38;2;43;110;213m:\033[0m\033[38;2;42;111;213ma\033[0m\033[38;2;42;111;212mN\033[0m\033[38;2;41;111;211m:\033[0m\033[38;2;41;112;210m:\033[0m\033[38;2;41;112;209m:\033[0m\033[38;2;40;112;208m:\033[0m\033[38;2;40;112;208m:\033[0m\033[38;2;40;113;207m:\033[0m\033[38;2;39;113;206mN\033[0m\033[38;2;39;113;205m \033[0m\033[38;2;39;114;204m \033[0m\033[38;2;38;114;203m \033[0m\033[38;2;38;114;203m \033[0m\033[38;2;37;115;202m \033[0m\033[38;2;37;115;201m \033[0m\033[38;2;37;115;200m \033[0m\033[38;2;36;116;199m \033[0m\033[38;2;36;116;198mN\033[0m\033[38;2;36;116;198m:\033[0m\033[38;2;35;116;197m:\033[0m\033[38;2;35;117;196m:\033[0m\033[38;2;35;117;195m:\033[0m\033[38;2;34;117;194m:\033[0m\033[38;2;34;118;193m:\033[0m\033[38;2;34;118;193mN\033[0m\033[38;2;33;118;192m \033[0m\033[38;2;33;119;191m \033[0m\033[38;2;32;119;190m \033[0m\033[38;2;32;119;189m \033[0m\033[38;2;32;120;188m \033[0m\033[38;2;31;120;187mB\033[0m\033[38;2;31;120;187m:\033[0m\033[38;2;31;120;186m:\033[0m\033[38;2;30;121;185m:\033[0m\033[38;2;30;121;184m:\033[0m\033[38;2;30;121;183m:\033[0m\033[38;2;29;122;182m:\033[0m\033[38;2;29;122;182m:\033[0m\033[38;2;28;122;181m:\033[0m\033[38;2;28;123;180m:\033[0m\033[38;2;28;123;179m:\033[0m\033[38;2;27;123;178m:\033[0m\033[38;2;27;124;177m:\033[0m\033[38;2;27;124;177m:\033[0m\033[38;2;26;124;176m:\033[0m\033[38;2;26;124;175m:\033[0m\033[38;2;26;125;174m:\033[0m\033[38;2;25;125;173mB\033[0m\033[38;2;25;125;172m \033[0m\033[38;2;24;126;172m \033[0m\033[38;2;24;126;171m \033[0m\033[38;2;24;126;170mo\033[0m\033[38;2;23;127;169mo\033[0m\033[38;2;23;127;168m:\033[0m\033[38;2;23;127;167m:\033[0m\033[38;2;22;128;167m:\033[0m\033[38;2;22;128;166m:\033[0m\033[38;2;22;128;165m:\033[0m\033[38;2;21;128;164m:\033[0m\033[38;2;21;129;163m:\033[0m\033[38;2;20;129;162m:\033[0m\033[38;2;20;129;161m:\033[0m\033[38;2;20;130;161m:\033[0m\033[38;2;19;130;160m:\033[0m\033[38;2;19;130;159mo\033[0m\033[38;2;19;131;158mo\033[0m\033[38;2;18;131;157m \033[0m\033[38;2;18;131;156m \033[0m\033[38;2;18;132;156m \033[0m\033[38;2;17;132;155m \033[0m\033[38;2;17;132;154m \033[0m\033[38;2;17;132;153m \033[0m\033[38;2;16;133;152m \033[0m\033[38;2;16;133;151m \033[0m\033[38;2;15;133;151m \033[0m\033[38;2;15;134;150mt\033[0m\033[38;2;15;134;149mt\033[0m\033[38;2;14;134;148m:\033[0m\033[38;2;14;135;147m:\033[0m\033[38;2;14;135;146m:\033[0m\033[38;2;13;135;146m:\033[0m\033[38;2;13;136;145m:\033[0m\033[38;2;13;136;144m:\033[0m\033[38;2;12;136;143m:\033[0m\033[38;2;12;136;142m:\033[0m\033[38;2;11;137;141m:\033[0m\033[38;2;11;137;141m:\033[0m\033[38;2;11;137;140m:\033[0m\033[38;2;10;138;139mt\033[0m\033[38;2;10;138;138mt\033[0m
                \033[38;2;57;98;247mN\033[0m\033[38;2;57;98;246mN\033[0m\033[38;2;56;99;245mN\033[0m\033[38;2;56;99;244mN\033[0m\033[38;2;56;99;244mN\033[0m\033[38;2;55;100;243mN\033[0m\033[38;2;55;100;242mN\033[0m\033[38;2;54;100;241mN\033[0m\033[38;2;54;100;240m \033[0m\033[38;2;54;101;239m \033[0m\033[38;2;53;101;239m \033[0m\033[38;2;53;101;238m \033[0m\033[38;2;53;102;237m \033[0m\033[38;2;52;102;236m \033[0m\033[38;2;52;102;235m \033[0m\033[38;2;52;103;234m \033[0m\033[38;2;51;103;234m \033[0m\033[38;2;51;103;233mN\033[0m\033[38;2;50;104;232mN\033[0m\033[38;2;50;104;231mN\033[0m\033[38;2;50;104;230mN\033[0m\033[38;2;49;104;229mN\033[0m\033[38;2;49;105;229mN\033[0m\033[38;2;49;105;228mN\033[0m\033[38;2;48;105;227m \033[0m\033[38;2;48;106;226m \033[0m\033[38;2;48;106;225ma\033[0m\033[38;2;47;106;224ma\033[0m\033[38;2;47;107;224ma\033[0m\033[38;2;47;107;223ma\033[0m\033[38;2;46;107;222ma\033[0m\033[38;2;46;108;221ma\033[0m\033[38;2;45;108;220ma\033[0m\033[38;2;45;108;219ma\033[0m\033[38;2;45;108;218ma\033[0m\033[38;2;44;109;218ma\033[0m\033[38;2;44;109;217m \033[0m\033[38;2;44;109;216m \033[0m\033[38;2;43;110;215ma\033[0m\033[38;2;43;110;214ma\033[0m\033[38;2;43;110;213ma\033[0m\033[38;2;42;111;213ma\033[0m\033[38;2;42;111;212mN\033[0m\033[38;2;41;111;211mN\033[0m\033[38;2;41;112;210mN\033[0m\033[38;2;41;112;209mN\033[0m\033[38;2;40;112;208mN\033[0m\033[38;2;40;112;208mN\033[0m\033[38;2;40;113;207mN\033[0m\033[38;2;39;113;206mN\033[0m\033[38;2;39;113;205m \033[0m\033[38;2;39;114;204m \033[0m\033[38;2;38;114;203m \033[0m\033[38;2;38;114;203m \033[0m\033[38;2;37;115;202m \033[0m\033[38;2;37;115;201m \033[0m\033[38;2;37;115;200m \033[0m\033[38;2;36;116;199m \033[0m\033[38;2;36;116;198m \033[0m\033[38;2;36;116;198mN\033[0m\033[38;2;35;116;197mN\033[0m\033[38;2;35;117;196mN\033[0m\033[38;2;35;117;195mN\033[0m\033[38;2;34;117;194mN\033[0m\033[38;2;34;118;193mN\033[0m\033[38;2;34;118;193mN\033[0m\033[38;2;33;118;192m \033[0m\033[38;2;33;119;191m \033[0m\033[38;2;32;119;190m \033[0m\033[38;2;32;119;189m \033[0m\033[38;2;32;120;188m \033[0m\033[38;2;31;120;187mB\033[0m\033[38;2;31;120;187mB\033[0m\033[38;2;31;120;186mB\033[0m\033[38;2;30;121;185mB\033[0m\033[38;2;30;121;184mB\033[0m\033[38;2;30;121;183mB\033[0m\033[38;2;29;122;182mB\033[0m\033[38;2;29;122;182mB\033[0m\033[38;2;28;122;181mB\033[0m\033[38;2;28;123;180mB\033[0m\033[38;2;28;123;179mB\033[0m\033[38;2;27;123;178mB\033[0m\033[38;2;27;124;177mB\033[0m\033[38;2;27;124;177mB\033[0m\033[38;2;26;124;176mB\033[0m\033[38;2;26;124;175mB\033[0m\033[38;2;26;125;174mB\033[0m\033[38;2;25;125;173m \033[0m\033[38;2;25;125;172m \033[0m\033[38;2;24;126;172m \033[0m\033[38;2;24;126;171m \033[0m\033[38;2;24;126;170m \033[0m\033[38;2;23;127;169m \033[0m\033[38;2;23;127;168mo\033[0m\033[38;2;23;127;167mo\033[0m\033[38;2;22;128;167mo\033[0m\033[38;2;22;128;166mo\033[0m\033[38;2;22;128;165mo\033[0m\033[38;2;21;128;164mo\033[0m\033[38;2;21;129;163mo\033[0m\033[38;2;20;129;162mo\033[0m\033[38;2;20;129;161mo\033[0m\033[38;2;20;130;161mo\033[0m\033[38;2;19;130;160mo\033[0m\033[38;2;19;130;159m \033[0m\033[38;2;19;131;158m \033[0m\033[38;2;18;131;157m \033[0m\033[38;2;18;131;156m \033[0m\033[38;2;18;132;156m \033[0m\033[38;2;17;132;155m \033[0m\033[38;2;17;132;154m \033[0m\033[38;2;17;132;153m \033[0m\033[38;2;16;133;152m \033[0m\033[38;2;16;133;151m \033[0m\033[38;2;15;133;151m \033[0m\033[38;2;15;134;150m \033[0m\033[38;2;15;134;149m \033[0m\033[38;2;14;134;148mt\033[0m\033[38;2;14;135;147mt\033[0m\033[38;2;14;135;146mt\033[0m\033[38;2;13;135;146mt\033[0m\033[38;2;13;136;145mt\033[0m\033[38;2;13;136;144mt\033[0m\033[38;2;12;136;143mt\033[0m\033[38;2;12;136;142mt\033[0m\033[38;2;11;137;141mt\033[0m\033[38;2;11;137;141mt\033[0m\033[38;2;11;137;140mt\033[0m\033[38;2;10;138;139m \033[0m\033[38;2;10;138;138m \033[0m""" 

# Настройка бд
data_default = {
    "bot": {
        "current_session": 'account',
        "api_id": 'None',
        "api_hash": 'None'
    },
    "users": {},
    "other": {
        "antispam": "off",
        "current_version": "None"
    }
}
user_default = {
    'gpt': {
        'model': 'gpt-4',
        'messages': []
    }
}

# Функция скачивания изображения из интернета
async def download_image(url, save_path):
    async with httpx.AsyncClient() as client:
        response = await client.get(url)
        if response.status_code == 200:
            with open(save_path, 'wb') as f:
                f.write(response.content)
            return save_path
        else:
            raise Exception(f"Ошибка загрузки изображения: {response.status_code}")
        
# Декоратор игнорирования/обработки ошибок
def ignore(func):
    async def wrapper(*args, **kwargs):
        try: return await func(*args, **kwargs)
        except pyrogram.errors.exceptions.bad_request_400.MessageIdInvalid: pass
        except pyrogram.errors.exceptions.bad_request_400.MessageNotModified: pass
        except IndexError as e:
            if "list index out of range" in str(e): pass
            else: raise
        except FloodWait as flood: await asyncio.sleep(delay=flood.value)
    return wrapper

# Функция паузы
pause = lambda: os.system(command='pause')

# Функция получения текущего времени и даты
get_datetime = lambda: datetime.datetime.now().strftime(format='%Y-%m-%d %H:%M:%S')

# Функция получения текущего времени
get_time = lambda: datetime.datetime.now().strftime(format='%H:%M:%S')

# Проверка на пустое сообщение
check_void = lambda message: message if message is None or message.replace(' ', '').replace('\t', '').replace('\n', '').replace(' ', '').replace('ᅠ', '') != '' else None

# Функция отправки реакции на сообщение
async def send_react(client, message, react): 
    try: await client.send_reaction(message.chat.id, message.id, react)
    except: pass 

# Инициализация бота
def initialize_app(session_folder: str = "sessions"):
    app_name = data.read()['bot']['current_session']
    temp = data.read()
    if 'bot' in temp and 'current_session' in temp['bot'] and 'api_id' in temp['bot'] and 'api_hash' in temp['bot'] and temp['bot']['current_session'] != 'None' and temp['bot']['api_id'] != 'None' and temp['bot']['api_hash'] != 'None':
        os.system(command=f'title [BOT] {app_name}')
        os.makedirs(name=session_folder, exist_ok=True)
        return Client(name=app_name, api_id=int(data.read()['bot']["api_id"]), api_hash=data.read()['bot']["api_hash"], workdir=session_folder), app_name
    else:
        clear()
        app_name = data.read()['bot']['current_session']
        session_name = input('Введите название сессии (default - account): ') or 'account'
        API_id = input("Введите API_id: ") or 'None'
        API_hash = input("Введите API_hash: ") or 'None'
        if 'bot' in temp and 'current_session' in temp['bot'] and 'api_id' in temp['bot'] and 'api_hash' in temp['bot']:
            temp['bot']['current_session'] = session_name
            temp['bot']['api_id'] = API_id
            temp['bot']['api_hash'] = API_hash
            data.write(temp)
        else:
            temp = data_default
            temp['bot']['current_session'] = session_name
            temp['bot']['api_id'] = API_id
            temp['bot']['api_hash'] = API_hash
            data.write(temp)
        os.system(command=f'title [BOT] {app_name}')
        os.makedirs(name=session_folder, exist_ok=True)
        try: return Client(name=app_name, api_id=int(data.read()['bot']["api_id"]), api_hash=data.read()['bot']["api_hash"], workdir=session_folder), app_name
        except Exception as e:
            clear(f'Произошла ошибка: {e}')
            quit()

# Работа с ChatGPT
ClientGPT = ClientGPT()

@ignore
async def gpt(prompt, user_id: str = None):
    asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())
    loop = asyncio.get_event_loop()
    if type(prompt) == str:
        messages=[
            {"role": "system", "content": "Ответ пользователю должен поступать на русском (Только если пользователь не попросит иного)"}, 
            {"role": 'user', "content": prompt}
        ]
    else:
        messages=[
            {"role": "system", "content": "Ответ пользователю должен поступать на русском (Только если пользователь не попросит иного)"}
        ]
        for i in prompt: messages.append(i)
    try:
        model = user_default['gpt']['model']
        if user_id:
            temp = data.read()
            if user_id in data.read()['users'] and 'gpt' in data.read()['users'][user_id] and 'messages' in data.read()['users'][user_id]['gpt']: model = temp['users'][user_id]['gpt']['model']
        response = await loop.run_in_executor(executor=None, func=lambda: ClientGPT.chat.completions.create(model=model, messages=messages))
        return response.choices[0].message.content
    except StopIteration: return "Нет ответа"
    except Exception as e: return f"ERRORПроизошла ошибка: {str(e)}"
    
# Функция перевода текста на английский
async def translate_text(text, src_lang='auto', dest_lang='en'):
    try: 
        translator = Translator()
        translated = await translator.translate(text, src=src_lang, dest=dest_lang)
        return translated.text
    except: return None

# Тестирование кода
async def execute_and_measure(code):
    start_time = time.time()
    exec_globals = {}
    exec_locals = {}
    output = io.StringIO()
    sys.stdout = output
    try:
        exec(code, exec_globals, exec_locals)
        end_time = time.time()
        execution_time = end_time - start_time
        result = exec_locals
        output_value = output.getvalue()
    except Exception as e:
        execution_time = None
        result = e
        output_value = ""
    finally: sys.stdout = sys.__stdout__
    return execution_time, result, output_value

def format_results(result, output_value, code_block):
    variables = []
    modules = []
    output_lines = output_value.strip().split('\n')
    for line in code_block.split('\n'):
        if re.match(pattern=r'^\s*\w+\s*=\s*.+', string=line): variables.append(line.strip())
        elif re.match(pattern=r'^\s*(import|from)\s+.+', string=line):
            module = line.strip()
            modules.append(module)
    res = f"Результаты тестирования кода:\n```python\n{code_block}\n```\n\n"
    if modules: res += "Модули:\n```python\n" + "\n".join(modules) + "\n```\n"
    if variables: res += "Переменные:\n```python\n" + "\n".join(variables) + "\n```\n"
    if output_lines: res += "Выводы:\n```python\n" + "\n".join([f"output {i+1}> {line}" for i, line in enumerate(iterable=output_lines)]) + "\n```\n"
    return res

# Основные админ команды
@ignore
async def me_command(client, message):
    text = message.text or ''
    prefix = '.'
    animations = {
        '.venom': {
            "text": 'Ехал Venom через Venom.$NEXTSTRING Видит Venom в реке Venom.$NEXTSTRING Сунул Venom руку в Venom.$NEXTSTRING Venom Venom Venom Venom.$NEXTSTRING **Venom.**',
            "delay": 0.15,
            "type": 'add' # reset
        }
    }
    
    if text.startswith(prefix):
        await send_react(client, message, "🤔")
        commands = [
            (f'{prefix}help', 'Список доступных команд', 'help', ['хелп', 'помощь', 'рудз', '[tkg', 'gjvjom']),
            (f'{prefix}test', 'Тестирует python код', 'test', ['тест', 'ntcn', 'еуые']),
            (f'{prefix}abbrev', 'Создание аббревиатуры для текста', 'abbrev', ['abb', 'ab', 'фиирев', 'фии', 'фи', 'аб', 'абб', 'аббрев', 'аббревиатура']),
            (f'{prefix}abbrev create Аббревиатура', 'Создание аббревиатуры', 'abbrev', ['abb', 'ab', 'фиирев', 'фии', 'фи', 'аб', 'абб', 'аббрев', 'аббревиатура']),
            (f'{prefix}abbrev add ID_Аббревиатуры Текст', 'Добавить текст для аббревиатуры', 'abbrev', ['abb', 'ab', 'фиирев', 'фии', 'фи', 'аб', 'абб', 'аббрев', 'аббревиатура']),
            (f'{prefix}abbrev edit ID_Аббревиатуры Текст', 'Изменить текст аббревиатуры', 'abbrev', ['abb', 'ab', 'фиирев', 'фии', 'фи', 'аб', 'абб', 'аббрев', 'аббревиатура']),
            (f'{prefix}abbrev delete ID_Аббревиатуры', 'Удалить аббревиатуру', 'abbrev', ['abb', 'ab', 'фиирев', 'фии', 'фи', 'аб', 'абб', 'аббрев', 'аббревиатура']),
            (f'{prefix}change', 'Изменение префиксов общих/личных', 'change', ['изменить', 'chang', 'срфтпу', 'срфтп', 'bpvtybnm', 'изменение', 'bpvtytybt', 'изм', 'bpv']),
            (f'{prefix}change me', 'Изменения префикса юзер команд', 'change', ['изменить', 'chang', 'срфтпу', 'срфтп', 'bpvtybnm', 'изменение', 'bpvtytybt', 'изм', 'bpv']),
            (f'{prefix}change general', 'Изменение префикса общедоступных команд', 'change', ['изменить', 'chang', 'срфтпу', 'срфтп', 'bpvtybnm', 'изменение', 'bpvtytybt', 'изм', 'bpv']),
            (f'{prefix}ban', 'Заблокировать команды пользователю', 'ban', ['eban', 'жбан', 'jban', 'ебан', 'yeban', 'уебан', 'ифт', ',ay', 'et,fy', 'оифт', 'уифт']),
            (f'{prefix}unban', 'Разблокировать команды пользователю', 'unban', ['разбан', 'hfp,fy', 'гтифт']),
            (f'{prefix}animations', 'Список анимаций', 'animations', ['anims', 'анимы', 'анимации', 'анимки', 'fybvs', 'fybvfwbb', 'fybvrb', 'аниматионс', 'фтшьфешщты', 'фтшьы']),
            (f'{prefix}convert', 'Расшифровка голосовых сообщений', 'convert', ['conv', 'конв', 'конверт', 'конвертация', 'сщтм', 'сщтмуке', 'rjyd', 'rjydthn', 'rjydthnfwbz']),
            (f'{prefix}antispam', 'Функция антиспама (Подробное описание доступно при использовании команды)', 'antispam', ['аспам', 'антиспам', 'fynbcgfv', 'aspam', 'fcgfv', 'фтешызфь', 'фызфь']),
            (f'{prefix}antispam on', 'Включить функцию антиспама', 'antispam', ['аспам', 'антиспам', 'fynbcgfv', 'aspam', 'fcgfv', 'фтешызфь', 'фызфь']),
            (f'{prefix}antispam off', 'Выключить функцию антиспама', 'antispam', ['аспам', 'антиспам', 'fynbcgfv', 'aspam', 'fcgfv', 'фтешызфь', 'фызфь']),
            (f'{prefix}autochange', 'Автоизменение аватара/никнейма/юзернейма/описания', 'autochange', ['achange', 'achang', 'автоизмененения', 'аизменения', 'автоизм', 'аизм', 'fdnjbpvtytybz', 'fbpvtytybz', 'fdnjbpv', 'fbpv', 'autoizm', 'aizm']),
            (f'{prefix}autochange avatar', 'Автоизменение аватара', 'autochange', ['achange', 'achang', 'автоизмененения', 'аизменения', 'автоизм', 'аизм', 'fdnjbpvtytybz', 'fbpvtytybz', 'fdnjbpv', 'fbpv', 'autoizm', 'aizm']),
            (f'{prefix}autochange avatar on', 'Включить автоизменение аватара', 'autochange', ['achange', 'achang', 'автоизмененения', 'аизменения', 'автоизм', 'аизм', 'fdnjbpvtytybz', 'fbpvtytybz', 'fdnjbpv', 'fbpv', 'autoizm', 'aizm']),
            (f'{prefix}autochange avatar off', 'Выключить автоизменение аватара', 'autochange', ['achange', 'achang', 'автоизмененения', 'аизменения', 'автоизм', 'аизм', 'fdnjbpvtytybz', 'fbpvtytybz', 'fdnjbpv', 'fbpv', 'autoizm', 'aizm']),
            (f'{prefix}autochange avatar add Фото', 'Добавить фото для автоматического изменения', 'autochange', ['achange', 'achang', 'автоизмененения', 'аизменения', 'автоизм', 'аизм', 'fdnjbpvtytybz', 'fbpvtytybz', 'fdnjbpv', 'fbpv', 'autoizm', 'aizm']),
            (f'{prefix}autochange avatar remove', 'Удалить все текущие аватарки', 'autochange', ['achange', 'achang', 'автоизмененения', 'аизменения', 'автоизм', 'аизм', 'fdnjbpvtytybz', 'fbpvtytybz', 'fdnjbpv', 'fbpv', 'autoizm', 'aizm']),
            (f'{prefix}autochange avatar delay', 'Посмотреть текущую задержку', 'autochange', ['achange', 'achang', 'автоизмененения', 'аизменения', 'автоизм', 'аизм', 'fdnjbpvtytybz', 'fbpvtytybz', 'fdnjbpv', 'fbpv', 'autoizm', 'aizm']),
            (f'{prefix}autochange avatar delay Время(в секундах, не меньше 60)', 'Установить задержку', 'autochange', ['achange', 'achang', 'автоизмененения', 'аизменения', 'автоизм', 'аизм', 'fdnjbpvtytybz', 'fbpvtytybz', 'fdnjbpv', 'fbpv', 'autoizm', 'aizm']),
            (f'{prefix}autochange nick', 'Автоизменение никнейма', 'autochange', ['achange', 'achang', 'автоизмененения', 'аизменения', 'автоизм', 'аизм', 'fdnjbpvtytybz', 'fbpvtytybz', 'fdnjbpv', 'fbpv', 'autoizm', 'aizm']),
            (f'{prefix}autochange nick on', 'Включить автоизменение никнейма', 'autochange', ['achange', 'achang', 'автоизмененения', 'аизменения', 'автоизм', 'аизм', 'fdnjbpvtytybz', 'fbpvtytybz', 'fdnjbpv', 'fbpv', 'autoizm', 'aizm']),
            (f'{prefix}autochange nick off', 'Выключить автоизменение никнейма', 'autochange', ['achange', 'achang', 'автоизмененения', 'аизменения', 'автоизм', 'аизм', 'fdnjbpvtytybz', 'fbpvtytybz', 'fdnjbpv', 'fbpv', 'autoizm', 'aizm']),
            (f'{prefix}autochange nick add Ник', 'Добавить никнейм для автоматического изменения', 'autochange', ['achange', 'achang', 'автоизмененения', 'аизменения', 'автоизм', 'аизм', 'fdnjbpvtytybz', 'fbpvtytybz', 'fdnjbpv', 'fbpv', 'autoizm', 'aizm']),
            (f'{prefix}autochange nick remove', 'Удалить все текущие аватарки', 'autochange', ['achange', 'achang', 'автоизмененения', 'аизменения', 'автоизм', 'аизм', 'fdnjbpvtytybz', 'fbpvtytybz', 'fdnjbpv', 'fbpv', 'autoizm', 'aizm']),
            (f'{prefix}autochange nick delay', 'Посмотреть текущую задержку', 'autochange', ['achange', 'achang', 'автоизмененения', 'аизменения', 'автоизм', 'аизм', 'fdnjbpvtytybz', 'fbpvtytybz', 'fdnjbpv', 'fbpv', 'autoizm', 'aizm']),
            (f'{prefix}autochange nick delay Время(в секундах, не меньше 60)', 'Установить задержку', 'autochange', ['achange', 'achang', 'автоизмененения', 'аизменения', 'автоизм', 'аизм', 'fdnjbpvtytybz', 'fbpvtytybz', 'fdnjbpv', 'fbpv', 'autoizm', 'aizm']),
            (f'{prefix}autochange username', 'Автоизменение никнейма', 'autochange', ['achange', 'achang', 'автоизмененения', 'аизменения', 'автоизм', 'аизм', 'fdnjbpvtytybz', 'fbpvtytybz', 'fdnjbpv', 'fbpv', 'autoizm', 'aizm']),
            (f'{prefix}autochange username on', 'Включить автоизменение юзернейма', 'autochange', ['achange', 'achang', 'автоизмененения', 'аизменения', 'автоизм', 'аизм', 'fdnjbpvtytybz', 'fbpvtytybz', 'fdnjbpv', 'fbpv', 'autoizm', 'aizm']),
            (f'{prefix}autochange username off', 'Выключить автоизменение юзернейма', 'autochange', ['achange', 'achang', 'автоизмененения', 'аизменения', 'автоизм', 'аизм', 'fdnjbpvtytybz', 'fbpvtytybz', 'fdnjbpv', 'fbpv', 'autoizm', 'aizm']),
            (f'{prefix}autochange username add Ник', 'Добавить юзернейм для автоматического изменения', 'autochange', ['achange', 'achang', 'автоизмененения', 'аизменения', 'автоизм', 'аизм', 'fdnjbpvtytybz', 'fbpvtytybz', 'fdnjbpv', 'fbpv', 'autoizm', 'aizm']),
            (f'{prefix}autochange username remove', 'Удалить все текущие юзернеймы', 'autochange', ['achange', 'achang', 'автоизмененения', 'аизменения', 'автоизм', 'аизм', 'fdnjbpvtytybz', 'fbpvtytybz', 'fdnjbpv', 'fbpv', 'autoizm', 'aizm']),
            (f'{prefix}autochange username delay', 'Посмотреть текущую задержку', 'autochange', ['achange', 'achang', 'автоизмененения', 'аизменения', 'автоизм', 'аизм', 'fdnjbpvtytybz', 'fbpvtytybz', 'fdnjbpv', 'fbpv', 'autoizm', 'aizm']),
            (f'{prefix}autochange username delay Время(в секундах, не меньше 60)', 'Установить задержку', 'autochange', ['achange', 'achang', 'автоизмененения', 'аизменения', 'автоизм', 'аизм', 'fdnjbpvtytybz', 'fbpvtytybz', 'fdnjbpv', 'fbpv', 'autoizm', 'aizm']),
            (f'{prefix}autochange description', 'Автоизменение описания', 'autochange', ['achange', 'achang', 'автоизмененения', 'аизменения', 'автоизм', 'аизм', 'fdnjbpvtytybz', 'fbpvtytybz', 'fdnjbpv', 'fbpv', 'autoizm', 'aizm']),
            (f'{prefix}autochange description on', 'Включить автоизменение описания', 'autochange', ['achange', 'achang', 'автоизмененения', 'аизменения', 'автоизм', 'аизм', 'fdnjbpvtytybz', 'fbpvtytybz', 'fdnjbpv', 'fbpv', 'autoizm', 'aizm']),
            (f'{prefix}autochange description off', 'Выключить автоизменение описания', 'autochange', ['achange', 'achang', 'автоизмененения', 'аизменения', 'автоизм', 'аизм', 'fdnjbpvtytybz', 'fbpvtytybz', 'fdnjbpv', 'fbpv', 'autoizm', 'aizm']),
            (f'{prefix}autochange description add Ник', 'Добавить описание для автоматического изменения', 'autochange', ['achange', 'achang', 'автоизмененения', 'аизменения', 'автоизм', 'аизм', 'fdnjbpvtytybz', 'fbpvtytybz', 'fdnjbpv', 'fbpv', 'autoizm', 'aizm']),
            (f'{prefix}autochange description remove', 'Удалить все текущие описания', 'autochange', ['achange', 'achang', 'автоизмененения', 'аизменения', 'автоизм', 'аизм', 'fdnjbpvtytybz', 'fbpvtytybz', 'fdnjbpv', 'fbpv', 'autoizm', 'aizm']),
            (f'{prefix}autochange description delay', 'Посмотреть текущую задержку', 'autochange', ['achange', 'achang', 'автоизмененения', 'аизменения', 'автоизм', 'аизм', 'fdnjbpvtytybz', 'fbpvtytybz', 'fdnjbpv', 'fbpv', 'autoizm', 'aizm']),
            (f'{prefix}autochange description delay Время(в секундах, не меньше 60)', 'Установить задержку', 'autochange', ['achange', 'achang', 'автоизмененения', 'аизменения', 'автоизм', 'аизм', 'fdnjbpvtytybz', 'fbpvtytybz', 'fdnjbpv', 'fbpv', 'autoizm', 'aizm']),
            (f'{prefix}gpt', 'Настройка GPT', 'gpt', ['гпт', 'chatgpt', 'чатгпт', 'ugn', 'пзе']),
            (f'{prefix}gpt on', 'Включить GPT', 'gpt', ['гпт', 'chatgpt', 'чатгпт', 'ugn', 'пзе']),
            (f'{prefix}gpt off', 'Выключить GPT', 'gpt', ['гпт', 'chatgpt', 'чатгпт', 'ugn', 'пзе']),
            (f'{prefix}gpt prefix', 'Посмотреть текущий префикс команд GPT', 'gpt', ['гпт', 'chatgpt', 'чатгпт', 'ugn', 'пзе']),
            (f'{prefix}gpt prefix Префикс', 'Установить новый префикс команд GPT', 'gpt', ['гпт', 'chatgpt', 'чатгпт', 'ugn', 'пзе']),
            (f'{prefix}gpt model', 'Текущая дефолтная модель GPT', 'gpt', ['гпт', 'chatgpt', 'чатгпт', 'ugn', 'пзе']),
            (f'{prefix}gpt model Модель', 'Изменить дефолтную модель GPT', 'gpt', ['гпт', 'chatgpt', 'чатгпт', 'ugn', 'пзе']),
            (f'{prefix}gpt models', 'Доступные модели GPT', 'gpt', ['гпт', 'chatgpt', 'чатгпт', 'ugn', 'пзе']),
            (f'{prefix}gpt models add Модель Описание', 'Добавить модель GPT', 'gpt', ['гпт', 'chatgpt', 'чатгпт', 'ugn', 'пзе']),
            (f'{prefix}gpt models remove Модель', 'Удалить модель GPT', 'gpt', ['гпт', 'chatgpt', 'чатгпт', 'ugn', 'пзе']),
            (f'{prefix}gpt messages', 'Настройка сообщений GPT', 'gpt', ['гпт', 'chatgpt', 'чатгпт', 'ugn', 'пзе']),
            (f'{prefix}gpt messages list', 'Список дефолтных сообщений', 'gpt', ['гпт', 'chatgpt', 'чатгпт', 'ugn', 'пзе']),
            (f'{prefix}gpt messages add user/system Сообщение', 'Добавить дефолтное сообщение для всех чатов', 'gpt', ['гпт', 'chatgpt', 'чатгпт', 'ugn', 'пзе']),
            (f'{prefix}gpt messages remove ID_Сообщения', 'Удалить дефолтное сообщение', 'gpt', ['гпт', 'chatgpt', 'чатгпт', 'ugn', 'пзе']),
            (f'{prefix}gpt messages clear', 'Очистить историю сообщений всех пользователей GPT', 'gpt', ['гпт', 'chatgpt', 'чатгпт', 'ugn', 'пзе']),
            (f'{prefix}avatar', 'Генерирует аватар по запросу и автоматически ставит его', 'avatar', ['ava', 'ава', 'аватар'])
        ]
        current_comand = 'other'
        for i in commands:
            if i[0] == message.text.split()[0].lower() or message.text.split()[0].lower()[1:] in i[3]: current_comand = i[2]
        for i in animations:
            if i == message.text.split()[0].lower(): current_comand = 'animation'

        match current_comand:
            case 'help':
                await send_react(client, message, "👍")
                result = 'Список доступных команд:\n'
                for i in commands: result += f'\n<code>{i[0]}</code> - {i[1]}'
                await message.reply(result, parse_mode=enums.parse_mode.ParseMode.HTML)

            case 'avatar':
                des = text.strip(message.text.split()[0])
                if len(des.split()) >= 1:
                    asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())
                    loop = asyncio.get_event_loop()
                    prompt = await translate_text(des)
                    try:
                        response = await loop.run_in_executor(executor=None, func=lambda: ClientGPT.images.generate(
                            model="flux",
                            prompt=prompt,
                            response_format="url"
                        ))

                        await send_react(client, message, "👍")
                        image_url = response.data[0].url
                        local_image_path = 'profile_photo.jpeg'
                        await download_image(image_url, local_image_path)
                        await client.set_profile_photo(photo=local_image_path)
                        if os.path.exists(local_image_path):
                            os.remove(local_image_path)
                        photos = [p async for p in client.get_chat_photos("me")]
                        valid_photos = [p for p in photos if p and hasattr(p, 'file_id')]
                        if len(valid_photos) > 1:
                            try:
                                file_ids_to_delete = [p.file_id for p in valid_photos[1:]]
                                await client.delete_profile_photos(file_ids_to_delete)
                            except Exception as e: await message.edit(f"Ошибка при удалении фотографий: {str(e)}")
                        else: pass
                    except Exception as e: 
                        await send_react(client, message, "👎")
                        await message.edit(f"Произошла ошибка при генерации изображения: {str(e)}")
                else:
                    await send_react(client, message, "👎")
                    await message.edit('Вы не указали описание для генерации аватара')

            case 'test':
                title = "🤖    Тестирование кода"
                await message.edit(f"{title}\n\nТестирование кода...")
                code_block = "\n".join(message.text.split('\n')[1:])
                execution_time, result, output_value = await execute_and_measure(code_block)
                
                if execution_time is not None:
                    await client.send_reaction(message.chat.id, message.id, "👍")
                    await message.edit(f"{title}\n\n{format_results(result, output_value, code_block)}\nВремя выполнения: {execution_time:.4f} секунд")
                else:
                    await send_react(client, message, "👎")
                    if result is not None: await message.edit(f"{title}\n\nПроизошла ошибка во время выполнения: {result}")

            case 'animation':
                try:
                    res = []
                    if 'text' in animations[message.text.split()[0]]:
                        await client.send_reaction(message.chat.id, message.id, "👍")
                        for i in animations[message.text.split()[0]]['text'].split():
                            if 'type' in animations[message.text.split()[0]]:
                                if animations[message.text.split()[0]]['type'] == 'add':
                                    res.append(i.replace('$NEXTSTRING', '\n'))
                                    try: await message.edit(" ".join(res).replace('\n ', '\n'))
                                    except: pass
                                else:
                                    try: await message.edit(i.replace('$NEXTSTRING', '\n'))
                                    except: pass
                                await asyncio.sleep(animations[message.text.split()[0]]['delay'] if 'delay' in animations[message.text.split()[0]] else 0.2)
                            else: 
                                await send_react(client, message, "👎")
                                await message.edit('Неверный формат анимации, запуск не возможен!')
                                break
                    else: 
                        await send_react(client, message, "👎")
                        await message.edit('Неверный формат анимации, запуск не возможен!')

                except Exception as e:
                    await send_react(client, message, "👎")
                    await message.edit(f'Произошла ошибка: {e}')
            
            case 'antispam':
                temp = data.read()
                match text.strip(text.split()[0]):
                    case 'on':
                        if temp['other']['antispam'] == 'on':
                            await send_react(client, message, "👎")
                            await message.edit('У вас уже включена функция антиспама')
                        else:
                            temp['other']['antispam'] = 'on'
                            data.write(temp)
                            await send_react(client, message, "👍")
                            await message.edit('Вы успешно включили функцию антиспама')
                    case 'off':
                        if temp['other']['antispam'] == 'off':
                            await send_react(client, message, "👎")
                            await message.edit('У вас уже выключена функция антиспама')
                        else:
                            temp['other']['antispam'] = 'off'
                            data.write(temp)
                            await send_react(client, message, "👍")
                            await message.edit('Вы успешно выключили функцию антиспама')
                    case 'help':
                        await send_react(client, message, "👍")
                    case _:
                        await send_react(client, message, "👎")
                        await message.edit(f'Вы ввели неверную подкоманду!\nИспользуйте команду `{prefix}antispam help` для получения полного списка доступных подкоманд')

            case 'other':
                await send_react(client, message, "👎")
                await message.reply('Команды не существует')
            
            case _:
                await send_react(client, message, "👎")
                await message.reply('Команда еще не реботает')

# Основные функции команд бота
@ignore
async def general_command(client, message):
    prefix = '*'
    text = message.text or ''
    if not text.startswith(prefix):
        return
    await send_react(client, message, "🤔")
    models = [
        ('gpt-4', 'GPT-4 — это мощная языковая модель, обладающая способностью генерировать текст, понимать контекст и выполнять разнообразные задачи обработки языка на высоком уровне.'),
        ('gpt-3.5-turbo', 'Более ранняя версия модели, которая все еще эффективна для многих задач. Более быстрая, по сравнению с GPT-4')
    ]
    subcommands = [
        (f'{prefix} Вопрос', 'Спросить вопрос у ChatGPT', 'main'),
        (f'{prefix}{prefix} Описание', 'Сгенерировать изображение по описанию', 'image'),
        (f'{prefix}help', 'Список доступных команд', 'help'),
        (f'{prefix}clear', 'Очистить историю сообщений', 'clear'),
        (f'{prefix}model', 'Текущая модель ChatGPT', 'model'),
        (f'{prefix}models', 'Список доступных моделей', 'models'),
        (f'{prefix}model Модель', 'Изменить модель для вас', 'model')
    ]
    
    text = message.reply_to_message.text if message.reply_to_message else ''
    text = text if text != None else 'None'
    text += '\n' if text != '' else ''
    text += message.text[1:] or ""
    user_id = str(message.from_user.id)
    temp = data.read()

    current_comand = 'image' if message.text.strip().startswith(f'{prefix}'*2) else 'main'
    for i in subcommands:
        if i[0] == message.text.split()[0]: current_comand = i[2]

    match current_comand:
        case 'main':
            if text == '':
                await send_react(client, message, "👎")
                await message.reply('Вы не указали содержимое вопроса!')
                return
            if user_id in data.read()['users'] and 'gpt' in data.read()['users'][user_id] and 'messages' in data.read()['users'][user_id]['gpt']: temp['users'][user_id]['gpt']['messages'].append({"role": "user", "content": text})
            else:
                temp['users'][user_id] = user_default
                temp['users'][user_id]['gpt']['messages'].append({"role": "user", "content": text})
            response = await gpt(prompt=text if user_id not in data.read()['users'] else temp['users'][user_id]['gpt']['messages'], user_id=user_id)
            if response == 'Нет ответа':
                await send_react(client, message, "👎")
                await message.reply(response)
            elif 'ERRORПроизошла ошибка: ' in response: 
                await send_react(client, message, "👎")
                await message.reply(response.replace('ERRORПроизошла ', 'Произошла '))
            elif response != '':
                await send_react(client, message, "👍")
                temp['users'][user_id]['gpt']['messages'].append({"role": "system", "content": response})
                data.write(data=temp)
                await message.reply(f'{response}\n\nТакже напоминаю, что вы можете очистить историю сообщений, написав `{[i[0] for i in subcommands if i[2] == 'clear'][0]}`')
                
            else: 
                await send_react(client, message, "👎")
                await message.reply('Произошла ошибка, ответ не получен!')

        case 'clear':
            try:
                if user_id in data.read()['users'] and 'gpt' in data.read()['users'][user_id] and 'messages' in data.read()['users'][user_id]['gpt'] and temp['users'][user_id]['gpt']['messages'] != []:
                    await send_react(client, message, "👍")
                    temp['users'][user_id]['gpt']['messages'].clear()
                    await message.reply('Вы успешно очистили историю сообщений')
                else:
                    await send_react(client, message, "👎")
                    temp['users'][user_id] = user_default
                    await message.reply('Вы еще не отправляли сообщений')
                data.write(data=temp)
            except Exception as e:
                await send_react(client, message, "👎")
                await message.reply('Произошла ошибка:', e)

        case 'help':
            await send_react(client, message, "👍")
            result = 'Список доступных команд:\n'
            for i in subcommands: result += f'\n<code>{i[0]}</code> - {i[1]}'
            await message.reply(result, parse_mode=enums.parse_mode.ParseMode.HTML)

        case 'image':
            asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())
            loop = asyncio.get_event_loop()
            prompt = await translate_text(message.text.strip('**'))
            try:
                response = await loop.run_in_executor(executor=None, func=lambda: ClientGPT.images.generate(
                    model="flux",
                    prompt=prompt,
                    response_format="url"
                ))

                await send_react(client, message, "👍")
                image_url = response.data[0].url
                await client.send_photo(
                    chat_id=message.chat.id,
                    photo=image_url,
                    caption="Вот ваше изображение!"
                )
            except Exception as e: 
                await send_react(client, message, "👎")
                await message.reply(f"Произошла ошибка при генерации изображения: {str(e)}")

        case 'models':
            await send_react(client, message, "👍")
            result = 'Список доступных моделей:\n'
            for i in models: result += f'\n<code>{i[0]}</code> - {i[1]}'
            await message.reply(result, parse_mode=enums.parse_mode.ParseMode.HTML)

        case 'model':
            temp = data.read()
            if len(text.split()) == 2:
                model = text.split()[1]
                check = False
                for i in models:
                    if model == i[0]: check = True
                if check:
                    if user_id in temp['users'] and 'gpt' in temp['users'][user_id] and temp['users'][user_id]['gpt']:
                        if temp['users'][user_id]['gpt'] == model:
                            await send_react(client, message, "👎")
                            await message.reply(f'Модель уже используется')
                        else:
                            await send_react(client, message, "👍")
                            temp['users'][user_id]['gpt']['model'] = model
                            await message.reply(f'Вы успешно изменили вашу модель GPT')
                    else:
                        await send_react(client, message, "👍")   
                        temp['users'][user_id] = user_default
                        temp['users'][user_id]['gpt']['model'] = model
                        await message.reply(f'Вы успешно изменили вашу модель GPT')
                    data.write(temp)
                else:
                    await send_react(client, message, "👎")
                    result = 'Вы указали неверную модель, список доступных моделей:\n'
                    for i in models: result += f'\n<code>{i[0]}</code> - {i[1]}'
                    await message.reply(result, parse_mode=enums.parse_mode.ParseMode.HTML)
            elif len(text.split()) == 1:
                await send_react(client, message, "👍")
                if user_id in temp['users'] and 'gpt' in temp['users'][user_id] and temp['users'][user_id]['gpt']: await message.reply(f'Текущая модель: **{temp['users'][user_id]['gpt']['model']}**')
                else: await message.reply(f"Текущая модель: **{user_default['gpt']['model']}**")
            else:
                await send_react(client, message, "👍")
                await message.reply(f"Используйте:\n\n`{prefix}model` - Текущая модель ChatGPT\n`{prefix}model Модель` - Узменить модель для вас")

# Остальной код
db = DataBaze(path='configs/')
data = db.file(name='data')
log = db.file(name='logs', type='txt')
log.create()
log.write(data=f"\n{'#'*15} {get_datetime()} {'#'*15}", rewrite=False)
if data.read() is None:
    data.create()
    data.write(data=data_default)


# Класс цветов
class Color:
    def __init__(self, esc_type):
        self.esc_type = esc_type
        self.black = f'{self.esc_type}[30m'
        self.red = f'{self.esc_type}[31m'
        self.green = f'{self.esc_type}[32m'
        self.yellow = f'{self.esc_type}[33m'
        self.blue = f'{self.esc_type}[34m'
        self.white = f'{self.esc_type}[97m'
        self.reset = f'{self.esc_type}[0m'
    def rgb_color(self, r, g, b):
        return f'{self.esc_type}[38;2;{r};{g};{b}m'
    def rgb_bgcolor(self, r, g, b):
        return f'{self.esc_type}[48;2;{r};{g};{b}m'
    def color_message(self, message, color):
        return f'{color}{message}{self.reset}'
    
# Функция перезапуска бота
def restart():
    python = sys.executable
    os.execv(python, [python] + sys.executable.argv)

# Функция ожидания
def waiting():
    if platform.system() == "Windows":
        os.system("pause")
    if platform.system() == 'Linux':
        os.system("clear")
    if platform.system() not in ['Windows', 'Linux']:
        print('Программу невозможно запустить на вашей ОС!')
        quit()

# Функция анимирования текста
def animate_message(message: str, local_color: str = None, speed: float = 0.015):
    for i in message:
        print(color.color_message(i, local_color) if local_color else i , end="", flush=True)
        time.sleep(speed)

# Функция выключения приложения
def stop():
    print(color.color_message("\n\nВы успешно завершили работу програмы", color.green))
    waiting()
    clear()
    quit()

# Функция подтвреждения
def confirm(message: str, speed: float = 0.015): # Функция для подтверждения действия
    try: # Проверка на ошибки
        while True: # Цикл для подтверждения действия
            clear() # Очищаем консоль
            animate_message(message, speed=speed) # Анимация сообщения
            t = input() # Получаем ввод пользователя
            if type(t) == str: t.lower() # Проверка на строку
            match t:
                case 'y': return True # Подтверждаем действие
                case 'n': return False # Отменяем действие
                case _: pass # Если ничего не введено
    except KeyboardInterrupt: # При нажатии Ctrl+C
        return False # Отменяем действие

# Проверка обновлений
def check_update():
    temp = data.read()
    response = requests.get("https://api.github.com/repos/Danex-Exe/TelegramUserBot2/releases")
    if response.status_code == 200:
        releases = response.json()
        if releases:
            version = releases[0]['tag_name']
            if 'other' in temp and 'current_version' in temp['other']:
                if temp['other']['current_version'] != version and temp['other']['current_version'] != 'None':
                    if confirm('Доступная новая версия программы, хотите обновить ее? (y/n): '):
                        temp['other']['current_version'] = version
                        data.write(temp)
                        try:
                            subprocess.run(['git', '-C', os.getcwd(), 'pull'], check=True)
                        except:
                            os.system('git config --global user.name "User"')
                            os.system('git config --global user.email "user@google.com"')
                            os.system(f'git config --global --add safe.directory {os.getcwd()}')
                            os.system('git pull origin main --allow-unrelated-histories')
                            os.system('pause')
                        clear('Успешно, перезапустите программу')
                        quit()
                else:
                    temp['other']['current_version'] = version
                    data.write(temp)
            else:
                temp = data_default
                temp['other']['current_version'] = version
                data.write(temp)

    else:
        animate_message("\n\n\n\nПроблема с подключением к интернету", color.red)
        quit()
    
color = Color('\033') # Класс для использования цвета в командной строке
check_update() # Проверяем наличие обновлений
